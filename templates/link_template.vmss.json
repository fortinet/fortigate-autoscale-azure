{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "3.5.2.0",
    "parameters": {
        "AdminPassword": {
            "type": "SecureString"
        },
        "AdminUsername": {
            "defaultValue": "azureadmin",
            "type": "String"
        },
        "AvailabilityZones": {
            "type": "Array"
        },
        "BYOLInstanceCount": {
            "defaultValue": 2,
            "minValue": 0,
            "type": "Int"
        },
        "ExternalLBBackendAddressPoolIds": {
            "type": "Array"
        },
        "ExternalLBInboundNatPoolIdsBYOL": {
            "type": "Array"
        },
        "ExternalLBInboundNatPoolIdsPAYG": {
            "type": "Array"
        },
        "FunctionAppName": {
            "type": "String"
        },
        "FunctionAppResourceGroupName": {
            "type": "String"
        },
        "FunctionNameFgtAsHandler": {
            "type": "String"
        },
        "FunctionNameLicenseHandler": {
            "type": "String"
        },
        "InstanceType": {
            "type": "String"
        },
        "LicensingModel": {
            "allowedValues": ["byolonly", "hybrid", "paygonly"],
            "type": "String"
        },
        "MaxBYOLInstanceCount": {
            "type": "Int"
        },
        "MaxPAYGInstanceCount": {
            "type": "Int"
        },
        "MinBYOLInstanceCount": {
            "type": "Int"
        },
        "MinPAYGInstanceCount": {
            "type": "Int"
        },
        "PAYGInstanceCount": {
            "type": "Int"
        },
        "ResourceNamePrefix": {
            "maxLength": 10,
            "type": "String"
        },
        "ScaleInThreshold": {
            "type": "Int"
        },
        "ScaleOutThreshold": {
            "type": "Int"
        },
        "SinglePlacementGroup": {
            "type": "Bool"
        },
        "StorageAccountName": {
            "type": "String"
        },
        "SubnetIds": {
            "type": "Array"
        },
        "UniqueResourceNamePrefix": {
            "type": "String"
        },
        "VmImageReferenceFgtBYOL": {
            "type": "Object"
        },
        "VmImageReferenceFgtPAYG": {
            "type": "Object"
        },
        "VmssNameBYOL": {
            "type": "String"
        },
        "VmssNamePAYG": {
            "type": "String"
        },
        "ZoneBalance": {
            "type": "Bool",
            "allowedValues": [true, false]
        }
    },
    "variables": {
        "autoscaleSettingsNameBYOL": "[concat(parameters('ResourceNamePrefix'), '-autoscalesettings-', parameters('VmssNameBYOL'))]",
        "autoscaleSettingsNamePAYG": "[concat(parameters('ResourceNamePrefix'), '-autoscalesettings-', parameters('VmssNamePAYG'))]",
        "autoscaleSettingsPresets": {
            "byolonly": {
                "byol": [
                    {
                        "metricTrigger": {
                            "metricName": "Percentage CPU",
                            "metricNamespace": "",
                            "metricResourceUri": "[concat('/subscriptions/',subscription().subscriptionId, '/resourceGroups/',  resourceGroup().name, '/providers/Microsoft.Compute/virtualMachineScaleSets/', parameters('VmssNameBYOL'))]",
                            "timeGrain": "PT1M",
                            "statistic": "Average",
                            "timeWindow": "PT5M",
                            "timeAggregation": "Average",
                            "operator": "GreaterThan",
                            "threshold": "[parameters('ScaleOutThreshold')]"
                        },
                        "scaleAction": {
                            "direction": "Increase",
                            "type": "ChangeCount",
                            "value": "1",
                            "cooldown": "PT1M"
                        }
                    },
                    {
                        "metricTrigger": {
                            "metricName": "Percentage CPU",
                            "metricNamespace": "",
                            "metricResourceUri": "[concat('/subscriptions/',subscription().subscriptionId, '/resourceGroups/',  resourceGroup().name, '/providers/Microsoft.Compute/virtualMachineScaleSets/', parameters('VmssNameBYOL'))]",
                            "timeGrain": "PT1M",
                            "statistic": "Average",
                            "timeWindow": "PT5M",
                            "timeAggregation": "Average",
                            "operator": "LessThan",
                            "threshold": "[parameters('ScaleInThreshold')]"
                        },
                        "scaleAction": {
                            "direction": "Decrease",
                            "type": "ChangeCount",
                            "value": "1",
                            "cooldown": "PT1M"
                        }
                    }
                ],
                "payg": []
            },
            "hybrid": {
                "byol": [],
                "payg": [
                    {
                        "metricTrigger": {
                            "metricName": "Percentage CPU",
                            "metricNamespace": "",
                            "metricResourceUri": "[concat('/subscriptions/',subscription().subscriptionId, '/resourceGroups/',  resourceGroup().name, '/providers/Microsoft.Compute/virtualMachineScaleSets/', parameters('VmssNameBYOL'))]",
                            "timeGrain": "PT1M",
                            "statistic": "Average",
                            "timeWindow": "PT5M",
                            "timeAggregation": "Average",
                            "operator": "GreaterThan",
                            "threshold": "[parameters('ScaleOutThreshold')]"
                        },
                        "scaleAction": {
                            "direction": "Increase",
                            "type": "ChangeCount",
                            "value": "1",
                            "cooldown": "PT1M"
                        }
                    },
                    {
                        "metricTrigger": {
                            "metricName": "Percentage CPU",
                            "metricNamespace": "",
                            "metricResourceUri": "[concat('/subscriptions/',subscription().subscriptionId, '/resourceGroups/',  resourceGroup().name, '/providers/Microsoft.Compute/virtualMachineScaleSets/', parameters('VmssNamePAYG'))]",
                            "timeGrain": "PT1M",
                            "statistic": "Average",
                            "timeWindow": "PT5M",
                            "timeAggregation": "Average",
                            "operator": "GreaterThan",
                            "threshold": "[parameters('ScaleOutThreshold')]"
                        },
                        "scaleAction": {
                            "direction": "Increase",
                            "type": "ChangeCount",
                            "value": "1",
                            "cooldown": "PT1M"
                        }
                    },
                    {
                        "metricTrigger": {
                            "metricName": "Percentage CPU",
                            "metricNamespace": "",
                            "metricResourceUri": "[concat('/subscriptions/',subscription().subscriptionId, '/resourceGroups/',  resourceGroup().name, '/providers/Microsoft.Compute/virtualMachineScaleSets/', parameters('VmssNameBYOL'))]",
                            "timeGrain": "PT1M",
                            "statistic": "Average",
                            "timeWindow": "PT5M",
                            "timeAggregation": "Average",
                            "operator": "LessThan",
                            "threshold": "[parameters('ScaleInThreshold')]"
                        },
                        "scaleAction": {
                            "direction": "Decrease",
                            "type": "ChangeCount",
                            "value": "1",
                            "cooldown": "PT1M"
                        }
                    },
                    {
                        "metricTrigger": {
                            "metricName": "Percentage CPU",
                            "metricNamespace": "",
                            "metricResourceUri": "[concat('/subscriptions/',subscription().subscriptionId, '/resourceGroups/',  resourceGroup().name, '/providers/Microsoft.Compute/virtualMachineScaleSets/', parameters('VmssNamePAYG'))]",
                            "timeGrain": "PT1M",
                            "statistic": "Average",
                            "timeWindow": "PT5M",
                            "timeAggregation": "Average",
                            "operator": "LessThan",
                            "threshold": "[parameters('ScaleInThreshold')]"
                        },
                        "scaleAction": {
                            "direction": "Decrease",
                            "type": "ChangeCount",
                            "value": "1",
                            "cooldown": "PT1M"
                        }
                    }
                ]
            },
            "paygonly": {
                "byol": [],
                "payg": [
                    {
                        "metricTrigger": {
                            "metricName": "Percentage CPU",
                            "metricNamespace": "",
                            "metricResourceUri": "[concat('/subscriptions/',subscription().subscriptionId, '/resourceGroups/',  resourceGroup().name, '/providers/Microsoft.Compute/virtualMachineScaleSets/', parameters('VmssNamePAYG'))]",
                            "timeGrain": "PT1M",
                            "statistic": "Average",
                            "timeWindow": "PT5M",
                            "timeAggregation": "Average",
                            "operator": "GreaterThan",
                            "threshold": "[parameters('ScaleOutThreshold')]"
                        },
                        "scaleAction": {
                            "direction": "Increase",
                            "type": "ChangeCount",
                            "value": "1",
                            "cooldown": "PT1M"
                        }
                    },
                    {
                        "metricTrigger": {
                            "metricName": "Percentage CPU",
                            "metricNamespace": "",
                            "metricResourceUri": "[concat('/subscriptions/',subscription().subscriptionId, '/resourceGroups/',  resourceGroup().name, '/providers/Microsoft.Compute/virtualMachineScaleSets/', parameters('VmssNamePAYG'))]",
                            "timeGrain": "PT1M",
                            "statistic": "Average",
                            "timeWindow": "PT5M",
                            "timeAggregation": "Average",
                            "operator": "LessThan",
                            "threshold": "[parameters('ScaleInThreshold')]"
                        },
                        "scaleAction": {
                            "direction": "Decrease",
                            "type": "ChangeCount",
                            "value": "1",
                            "cooldown": "PT1M"
                        }
                    }
                ]
            }
        },
        "cmdDeleteAll": "[concat('az account set -s ', subscription().subscriptionId, ';', variables('cmdDeleteAutoscaleSettings'), variables('cmdDeleteVMSS'))]",
        "cmdDeleteAutoscaleSettings": "[concat('az monitor autoscale delete', ' -g ', resourceGroup().name, ' -n ', variables('autoscaleSettingsNameBYOL'), ';', 'az monitor autoscale delete -g ', resourceGroup().name, ' -n ', variables('autoscaleSettingsNamePAYG'), ';')]",
        "cmdDeleteVMSS": "[concat('az vmss delete', ' -g ', resourceGroup().name,' -n ', parameters('VmssNameBYOL'), ';', 'az vmss delete -g ', resourceGroup().name,' -n ', parameters('VmssNamePAYG'), ';')]",
        "externalLBBackendAddressPools": {
            "copy": [
                {
                    "name": "externalLBBackendAddressPoolsCopyIt",
                    "count": "[length(parameters('ExternalLBBackendAddressPoolIds'))]",
                    "input": {
                        "id": "[parameters('ExternalLBBackendAddressPoolIds')[copyIndex('externalLBBackendAddressPoolsCopyIt')]]"
                    }
                }
            ]
        },
        "externlLBInboundNatPoolsBYOL": {
            "copy": [
                {
                    "name": "externlLBInboundNatPoolsBYOLCopyIt",
                    "count": "[length(parameters('ExternalLBInboundNatPoolIdsBYOL'))]",
                    "input": {
                        "id": "[parameters('ExternalLBInboundNatPoolIdsBYOL')[copyIndex('externlLBInboundNatPoolsBYOLCopyIt')]]"
                    }
                }
            ]
        },
        "externlLBInboundNatPoolsPAYG": {
            "copy": [
                {
                    "name": "externlLBInboundNatPoolsPAYGCopyIt",
                    "count": "[length(parameters('ExternalLBInboundNatPoolIdsPAYG'))]",
                    "input": {
                        "id": "[parameters('ExternalLBInboundNatPoolIdsPAYG')[copyIndex('externlLBInboundNatPoolsPAYGCopyIt')]]"
                    }
                }
            ]
        },
        "ifBYOLOnly": "[and(not(equals(parameters('MaxBYOLInstanceCount'), 0)), not(equals(parameters('MaxBYOLInstanceCount'), 0)), equals(parameters('MinPAYGInstanceCount'), 0), equals(parameters('MaxPAYGInstanceCount'), 0))]",
        "ifPAYGOnly": "[equals(parameters('BYOLInstanceCount'), 0)]",
        "ifZoneBalanceable": "[greater(length(parameters('AvailabilityZones')), 1)]",
        "licensingModel": "[if(variables('ifPAYGOnly'), 'PAYG-Only', if(variables('ifBYOLOnly'), 'BYOL-Only', 'Hybrid'))]",
        "networkInterfaceConfigurationNonLoadBalancingSubnets": {
            "copy": [
                {
                    "name": "networkInterfaceConfigurationNonLoadBalancingSubnetsCopyIt",
                    "count": "[length(parameters('SubnetIds'))]",
                    "input": {
                        "name": "[concat('nic-config-subnet', add(copyIndex('networkInterfaceConfigurationNonLoadBalancingSubnetsCopyIt'), 1))]",
                        "properties": {
                            "primary": false,
                            "enableIPForwarding": false,
                            "ipConfigurations": [
                                {
                                    "name": "[concat('ip-config-subnet', add(copyIndex('networkInterfaceConfigurationNonLoadBalancingSubnetsCopyIt'), 1))]",
                                    "properties": {
                                        "Subnet": {
                                            "id": "[parameters('SubnetIds')[copyIndex('networkInterfaceConfigurationNonLoadBalancingSubnetsCopyIt')]]"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            ]
        },
        "networkInterfaceConfigurationSubnet1BYOL": {
            "name": "nic-config-subnet1",
            "properties": {
                "primary": true,
                "enableIPForwarding": true,
                "ipConfigurations": [
                    {
                        "name": "ip-config-subnet1",
                        "properties": {
                            "Subnet": {
                                "id": "[parameters('SubnetIds')[0]]"
                            },
                            "loadBalancerBackendAddressPools": "[createArray(variables('externalLBBackendAddressPools').externalLBBackendAddressPoolsCopyIt[0])]",
                            "loadBalancerInboundNatPools": "[if(empty(variables('externlLBInboundNatPoolsBYOL').externlLBInboundNatPoolsBYOLCopyIt), null(), variables('externlLBInboundNatPoolsBYOL').externlLBInboundNatPoolsBYOLCopyIt)]"
                        }
                    }
                ]
            }
        },
        "networkInterfaceConfigurationSubnet1PAYG": {
            "name": "nic-config-subnet1",
            "properties": {
                "primary": true,
                "enableIPForwarding": true,
                "ipConfigurations": [
                    {
                        "name": "ip-config-subnet1",
                        "properties": {
                            "Subnet": {
                                "id": "[parameters('SubnetIds')[0]]"
                            },
                            "loadBalancerBackendAddressPools": "[createArray(variables('externalLBBackendAddressPools').externalLBBackendAddressPoolsCopyIt[0])]",
                            "loadBalancerInboundNatPools": "[if(empty(variables('externlLBInboundNatPoolsPAYG').externlLBInboundNatPoolsPAYGCopyIt), null(), variables('externlLBInboundNatPoolsPAYG').externlLBInboundNatPoolsPAYGCopyIt)]"
                        }
                    }
                ]
            }
        },
        "networkInterfaceConfigurationsBYOL": "[concat(createArray(variables('networkInterfaceConfigurationSubnet1BYOL')), skip(variables('networkInterfaceConfigurationNonLoadBalancingSubnets').networkInterfaceConfigurationNonLoadBalancingSubnetsCopyIt, 1))]",
        "networkInterfaceConfigurationsPAYG": "[concat(createArray(variables('networkInterfaceConfigurationSubnet1PAYG')), skip(variables('networkInterfaceConfigurationNonLoadBalancingSubnets').networkInterfaceConfigurationNonLoadBalancingSubnetsCopyIt, 1))]"
    },
    "resources": [
        {
            "type": "Microsoft.Compute/virtualMachineScaleSets",
            "apiVersion": "2019-07-01",
            "name": "[parameters('VmssNameBYOL')]",
            "location": "[resourceGroup().location]",
            "plan": {
                "name": "[parameters('VmImageReferenceFgtBYOL').sku]",
                "publisher": "[parameters('VmImageReferenceFgtBYOL').publisher]",
                "product": "[parameters('VmImageReferenceFgtBYOL').offer]"
            },
            "properties": {
                "overprovision": false,
                "singlePlacementGroup": "[parameters('SinglePlacementGroup')]",
                "upgradePolicy": {
                    "mode": "Manual"
                },
                "virtualMachineProfile": {
                    "storageProfile": {
                        "osDisk": {
                            "createOption": "FromImage",
                            "caching": "ReadWrite"
                        },
                        "dataDisks": [
                            {
                                "diskSizeGB": 30,
                                "lun": 1,
                                "createOption": "Empty"
                            }
                        ],
                        "imageReference": "[parameters('VmImageReferenceFgtBYOL')]"
                    },
                    "diagnosticsProfile": {
                        "bootDiagnostics": {
                            "enabled": true,
                            "storageUri": "[concat('https://', parameters('StorageAccountName'), '.blob.core.windows.net')]"
                        }
                    },
                    "osProfile": {
                        "computerNamePrefix": "[parameters('VmssNameBYOL')]",
                        "adminUsername": "[parameters('adminUsername')]",
                        "customData": "[base64(concat('{\"license-url\": \"', 'https://', parameters('FunctionAppName'), '.azurewebsites.net/api/', parameters('FunctionNameLicenseHandler'), '?code=', listKeys(resourceId(subscription().subscriptionId, parameters('FunctionAppResourceGroupName'), 'Microsoft.Web/sites/functions', parameters('FunctionAppName'),  'byol-license'), '2019-08-01').default, '\",\"config-url\": \"', 'https://', parameters('FunctionAppName'), '.azurewebsites.net/api/', parameters('FunctionNameFgtAsHandler'), '?code=', listKeys(resourceId(subscription().subscriptionId, parameters('FunctionAppResourceGroupName'), 'Microsoft.Web/sites/functions', parameters('FunctionAppName'),  'fgt-as-handler'), '2019-08-01').default, '\"}\n'))]",
                        "adminPassword": "[parameters('adminPassword')]"
                    },
                    "networkProfile": {
                        "networkInterfaceConfigurations": "[variables('networkInterfaceConfigurationsBYOL')]"
                    }
                },
                "zoneBalance": "[if(variables('ifZoneBalanceable'), parameters('ZoneBalance'), null())]"
            },
            "sku": {
                "name": "[parameters('InstanceType')]",
                "tier": "Standard",
                "capacity": 0
            },
            "zones": "[parameters('AvailabilityZones')]"
        },
        {
            "type": "Microsoft.Compute/virtualMachineScaleSets",
            "apiVersion": "2019-07-01",
            "name": "[parameters('VmssNamePAYG')]",
            "location": "[resourceGroup().location]",
            "plan": {
                "name": "[parameters('VmImageReferenceFgtPAYG').sku]",
                "publisher": "[parameters('VmImageReferenceFgtPAYG').publisher]",
                "product": "[parameters('VmImageReferenceFgtPAYG').offer]"
            },
            "properties": {
                "overprovision": false,
                "singlePlacementGroup": "[parameters('SinglePlacementGroup')]",
                "upgradePolicy": {
                    "mode": "Manual"
                },
                "virtualMachineProfile": {
                    "storageProfile": {
                        "osDisk": {
                            "createOption": "FromImage",
                            "caching": "ReadWrite"
                        },
                        "dataDisks": [
                            {
                                "diskSizeGB": 30,
                                "lun": 1,
                                "createOption": "Empty"
                            }
                        ],
                        "imageReference": "[parameters('VmImageReferenceFgtPAYG')]"
                    },
                    "diagnosticsProfile": {
                        "bootDiagnostics": {
                            "enabled": true,
                            "storageUri": "[concat('https://', parameters('StorageAccountName'), '.blob.core.windows.net')]"
                        }
                    },
                    "priority": "Low",
                    "evictionPolicy": "delete",
                    "osProfile": {
                        "computerNamePrefix": "[parameters('VmssNamePAYG')]",
                        "customData": "[base64(concat('{\"config-url\": \"', 'https://', parameters('FunctionAppName'), '.azurewebsites.net/api/', parameters('FunctionNameFgtAsHandler'), '?code=', listKeys(resourceId(subscription().subscriptionId, parameters('FunctionAppResourceGroupName'), 'Microsoft.Web/sites/functions', parameters('FunctionAppName'),  'fgt-as-handler'), '2019-08-01').default, '\"}\n'))]",
                        "adminUsername": "[parameters('adminUsername')]",
                        "adminPassword": "[parameters('adminPassword')]"
                    },
                    "networkProfile": {
                        "networkInterfaceConfigurations": "[variables('networkInterfaceConfigurationsPAYG')]"
                    }
                },
                "zoneBalance": "[if(variables('ifZoneBalanceable'), parameters('ZoneBalance'), null())]"
            },
            "sku": {
                "name": "[parameters('InstanceType')]",
                "tier": "Standard",
                "capacity": 0
            },
            "zones": "[parameters('AvailabilityZones')]"
        },
        {
            "type": "Microsoft.Insights/autoscaleSettings",
            "apiVersion": "2014-04-01",
            "name": "[variables('autoscaleSettingsNameBYOL')]",
            "location": "[resourceGroup().location]",
            "dependsOn": ["[parameters('VmssNameBYOL')]"],
            "properties": {
                "name": "[variables('autoscaleSettingsNameBYOL')]",
                "targetResourceUri": "[concat('/subscriptions/',subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Compute/virtualMachineScaleSets/', parameters('VmssNameBYOL'))]",
                "enabled": false,
                "profiles": [
                    {
                        "name": "[concat(parameters('UniqueResourceNamePrefix'),'-deployed-profile')]",
                        "capacity": {
                            "minimum": "[parameters('MinBYOLInstanceCount')]",
                            "maximum": "[parameters('MaxBYOLInstanceCount')]",
                            "default": "[parameters('BYOLInstanceCount')]"
                        },
                        "rules": "[variables('autoscaleSettingsPresets')[parameters('LicensingModel')].byol]"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Insights/autoscaleSettings",
            "apiVersion": "2014-04-01",
            "name": "[variables('autoscaleSettingsNamePAYG')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[parameters('VmssNamePAYG')]",
                "[variables('autoscaleSettingsNameBYOL')]"
            ],
            "properties": {
                "name": "[variables('autoscaleSettingsNamePAYG')]",
                "targetResourceUri": "[concat('/subscriptions/',subscription().subscriptionId, '/resourceGroups/',  resourceGroup().name, '/providers/Microsoft.Compute/virtualMachineScaleSets/', parameters('VmssNamePAYG'))]",
                "enabled": false,
                "profiles": [
                    {
                        "name": "[concat(parameters('UniqueResourceNamePrefix'),'-deployed-profile')]",
                        "capacity": {
                            "minimum": "[parameters('MinPAYGInstanceCount')]",
                            "maximum": "[parameters('MaxPAYGInstanceCount')]",
                            "default": "[parameters('PAYGInstanceCount')]"
                        },
                        "rules": "[variables('autoscaleSettingsPresets')[parameters('LicensingModel')].payg]"
                    }
                ]
            }
        }
    ],
    "outputs": {
        "autoscaleSettingsNameBYOL": {
            "type": "String",
            "value": "[variables('autoscaleSettingsNameBYOL')]"
        },
        "autoscaleSettingsNamePAYG": {
            "type": "String",
            "value": "[variables('autoscaleSettingsNamePAYG')]"
        },
        "byolScaleSetDefaultSize": {
            "type": "Int",
            "value": "[parameters('BYOLInstanceCount')]"
        },
        "byolScaleSetMaxSize": {
            "type": "Int",
            "value": "[parameters('MaxBYOLInstanceCount')]"
        },
        "byolScaleSetMinSize": {
            "type": "Int",
            "value": "[parameters('MinBYOLInstanceCount')]"
        },
        "byolScaleSetName": {
            "type": "String",
            "value": "[parameters('VmssNameBYOL')]"
        },
        "cmdDeleteAll": {
            "type": "String",
            "value": "[variables('cmdDeleteAll')]"
        },
        "licensingModel": {
            "type": "String",
            "value": "[variables('licensingModel')]"
        },
        "paygScaleSetDefaultSize": {
            "type": "Int",
            "value": "[parameters('PAYGInstanceCount')]"
        },
        "paygScaleSetMaxSize": {
            "type": "Int",
            "value": "[parameters('MaxPAYGInstanceCount')]"
        },
        "paygScaleSetMinSize": {
            "type": "Int",
            "value": "[parameters('MinPAYGInstanceCount')]"
        },
        "paygScaleSetName": {
            "type": "String",
            "value": "[parameters('VmssNamePAYG')]"
        }
    }
}
