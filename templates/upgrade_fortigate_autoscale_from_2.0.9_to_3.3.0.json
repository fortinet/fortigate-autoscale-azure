{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "3.3.0.0",
    "parameters": {
        "AccessRestrictionIPRange": {
            "defaultValue": "",
            "type": "String",
            "metadata": {
                "description": "Specify IP ranges (single IPv4 address or CIDR range) to allow access from the Internet or from your on-premises network to the CosmosDB and Function App. Specify at least one entry for security purposes. For multiple entries, each entry must be separated by a comma and no trailing comma is allowed. **WARNING!** 0.0.0.0/0 accepts connections from any IP address. We recommend that you use a constrained CIDR range to reduce the potential of inbound attacks from unknown IP addresses."
            }
        },
        "AdminPassword": {
            "type": "SecureString",
            "metadata": {
                "description": "FortiGate administrator password on all VMs as well as the FortiAnalyzer if FortiAnalyzer integration is enabled. Must be between 11 and 26 characters and must include at least one uppercase letter, one lowercase letter, one digit, and one special character such as (! @ # $ %)."
            }
        },
        "AdminUsername": {
            "defaultValue": "azureadmin",
            "type": "String",
            "metadata": {
                "description": "FortiGate administrator username on all VMs as well as the FortiAnalyzer if FortiAnalyzer integration is enabled."
            }
        },
        "BYOLInstanceCount": {
            "defaultValue": 2,
            "minValue": 0,
            "type": "Int",
            "metadata": {
                "description": "The number of FortiGate instances the BYOL VMSS should have at any time. For High Availability in BYOL-only and Hybrid use cases, ensure at least 2 FortiGates are in the group. For specific use cases, set to 0 for PAYG-only, and >= 2 for BYOL-only or hybrid licensing."
            }
        },
        "FOSVersion": {
            "defaultValue": "6.4.5",
            "allowedValues": ["6.4.5"],
            "type": "String",
            "metadata": {
                "description": "FortiOS version supported by FortiGate Autoscale for Azure."
            }
        },
        "FortiAnalyzerAutoscaleAdminPassword": {
            "defaultValue": "",
            "type": "securestring",
            "metadata": {
                "description": "Password for the 'FortiAnalyzer Autoscale Admin Username'. The password must conform to the FortiAnalyzer password policy and have a minimum length of 8 and a maximum length of 128. If you need to enable KMS encryption, refer to the documentation."
            }
        },
        "FortiAnalyzerAutoscaleAdminUsername": {
            "defaultValue": "",
            "type": "string",
            "metadata": {
                "description": "The name of the secondary administrator-level account in the FortiAnalyzer, which FortiGate Autoscale uses to connect to the FortiAnalyzer to authorize any FortiGate device in the Auto Scaling group. To conform to the FortiAnalyzer naming policy, the user name can only contain numbers, lowercase letters, uppercase letters, and hyphens. It cannot start or end with a hyphen (-)."
            }
        },
        "FortiAnalyzerCustomPrivateIPAddress": {
            "defaultValue": "",
            "type": "string",
            "metadata": {
                "description": "The custom private IP address to be used by the FortiAnalyzer. Must be within the Public subnet 1 CIDR range. Required if 'FortiAnalyzer Integration Options' is set to 'yes'. If 'FortiAnalyzer Integration Options' is set to 'no', any input will be ignored."
            }
        },
        "FortiAnalyzerInstanceType": {
            "defaultValue": "",
            "type": "String",
            "metadata": {
                "description": "Size of the FortiAnalyzer-VM. Not all instance types are supported. Review the documentation prior to selecting an instance."
            }
        },
        "FortiAnalyzerIntegrationOptions": {
            "defaultValue": "yes",
            "allowedValues": ["yes", "no"],
            "type": "String",
            "metadata": {
                "description": "Choose 'yes' to incorporate FortiAnalyzer into FortiGate Autoscale for Azure to use extended features that include storing logs into FortiAnalyzer."
            }
        },
        "FortiAnalyzerVersion": {
            "defaultValue": "6.4.5",
            "allowedValues": ["6.4.5", "6.2.5"],
            "type": "String",
            "metadata": {
                "description": "FortiAnalyzer version supported by FortiGate Autoscale for Azure."
            }
        },
        "FortiGatePSKSecret": {
            "type": "SecureString",
            "metadata": {
                "description": "The secret key used by FortiGate instances to securely communicate with each other. Must contain numbers and letters and may contain special characters. Maximum length is 128."
            }
        },
        "HeartBeatDelayAllowance": {
            "defaultValue": 30,
            "minValue": 30,
            "type": "Int",
            "metadata": {
                "description": "The maximum amount of time (in seconds) allowed for network latency of the FortiGate heartbeat arriving at the Autoscale handler function. Minimum is 30."
            }
        },
        "HeartBeatInterval": {
            "defaultValue": 60,
            "minValue": 30,
            "maxValue": 120,
            "type": "Int",
            "metadata": {
                "description": "The length of time (in seconds) that the FortiGate waits between sending heartbeat requests to the Autoscale handler function. Minimum is 30. Maximum is 120."
            }
        },
        "HeartBeatLossCount": {
            "defaultValue": 10,
            "minValue": 3,
            "type": "Int",
            "metadata": {
                "description": "Number of consecutively lost heartbeats. When the Heart Beat Loss Count has been reached, the VM is deemed unhealthy and failover activities will commence."
            }
        },
        "InstanceType": {
            "defaultValue": "Standard_F4",
            "allowedValues": ["Standard_F4s_v2", "Standard_F4s", "Standard_F4"],
            "type": "String",
            "metadata": {
                "description": "Size of the VMs in the VMSS."
            }
        },
        "KeyVaultName": {
            "defaultValue": "",
            "type": "String",
            "metadata": {
                "description": "Name of the Key Vault to be used by the FortiGate Autoscale. This parameter can be left empty and a name will be generated. If specified, the name must be globally unique and not be the of any Key Vault in the soft deleted state."
            }
        },
        "MaxBYOLInstanceCount": {
            "defaultValue": 2,
            "minValue": 0,
            "type": "Int",
            "metadata": {
                "description": "Maximum number of FortiGate instances in the BYOL VMSS. For specific use cases, set to 0 for PAYG-only, and >= 2 for BYOL-only or hybrid licensing. This number must be greater than or equal to the 'Min BYOL Instance Count'."
            }
        },
        "MaxPAYGInstanceCount": {
            "defaultValue": 6,
            "minValue": 0,
            "type": "Int",
            "metadata": {
                "description": "Maximum number of FortiGate instances in the PAYG VMSS. For specific use cases, set to 0 for BYOL-only, >= 2 for PAYG-only, and >= 0 for hybrid licensing. This number must be greater than or equal to the 'Min PAYG Instance Count'."
            }
        },
        "MinBYOLInstanceCount": {
            "defaultValue": 2,
            "minValue": 0,
            "type": "Int",
            "metadata": {
                "description": "Minimum number of FortiGate instances in the BYOL VMSS. For specific use cases, set to 0 for PAYG-only, and >= 2 for BYOL-only or hybrid licensing."
            }
        },
        "MinPAYGInstanceCount": {
            "defaultValue": 0,
            "minValue": 0,
            "type": "Int",
            "metadata": {
                "description": "Minimum number of FortiGate instances in the PAYG VMSS. For specific use cases, set to 0 for BYOL-only, >= 2 for PAYG-only, and >= 0 for hybrid licensing."
            }
        },
        "PAYGInstanceCount": {
            "defaultValue": 0,
            "minValue": 0,
            "type": "Int",
            "metadata": {
                "description": "The number of FortiGate instances the PAYG VMSS should have at any time. For High Availability in a PAYG-only use case, ensure at least 2 FortiGates are in the group. For specific use cases, set to 0 for BYOL-only, >= 2 for PAYG-only, and >= 0 for hybrid licensing."
            }
        },
        "PackageResURL": {
            "type": "String",
            "defaultValue": "https://github.com/fortinet/fortigate-autoscale-azure/releases/download/3.3.0/fortigate-autoscale-azure-funcapp.zip",
            "metadata": {
                "description": "The public URL of the function source file named fortigate-autoscale-azure-funcapp.zip, and can be found inside fortigate-autoscale-azure-template-deployment.zip. The public URL of the deployment package zip file that contains the resource used to deploy the Function App. This URL must be accessible by Azure. The default URL points to the GitHub release corresponding to this ARM template contentVersion."
            }
        },
        "PrimaryElectionTimeout": {
            "defaultValue": 600,
            "type": "Int",
            "metadata": {
                "description": "The maximum time (in seconds) to wait for the election of the primary instance to complete."
            }
        },
        "ResourceNamePrefix": {
            "type": "String",
            "metadata": {
                "description": "'ResourceNamePrefix' value found in the input of the old deployment template."
            }
        },
        "ScaleInThreshold": {
            "defaultValue": 20,
            "type": "Int",
            "metadata": {
                "description": "Percentage of CPU utilization at which scale-in should occur."
            }
        },
        "ScaleOutThreshold": {
            "defaultValue": 80,
            "type": "Int",
            "metadata": {
                "description": "Percentage of CPU utilization at which scale-out should occur."
            }
        },
        "ServicePlanTier": {
            "defaultValue": "Premium (P1V2)",
            "allowedValues": ["Premium (P1V2)", "Free (for demo only)"],
            "type": "String",
            "metadata": {
                "description": "The pricing tier for the function service plan. Note: The Free plan is for trial and demo use only. Do not use it in a production environment."
            }
        },
        "ServicePrincipalAppID": {
            "type": "String",
            "metadata": {
                "description": "Application ID for the Registered app used as the Autoscale Function App API request service principal. This is under Azure Active Directory > App registrations > {your app}."
            }
        },
        "ServicePrincipalAppSecret": {
            "type": "String",
            "metadata": {
                "description": "Password (Authentication key) for the Registered app used as the Autoscale Function App API request service principal."
            }
        },
        "ServicePrincipalObjectID": {
            "type": "String",
            "metadata": {
                "description": "Object ID for the Registered app used as Autoscale Function App API request service principal. This is under Azure Active Directory > App registrations > {your app}."
            }
        },
        "StorageAccountType": {
            "defaultValue": "Standard_LRS",
            "allowedValues": ["Standard_LRS", "Standard_GRS", "Standard_RAGRS"],
            "type": "String",
            "metadata": {
                "description": "Storage account type."
            }
        },
        "Subnet1Name": {
            "type": "String",
            "metadata": {
                "description": "Name of subnet 1, the subnet in which to deploy the FortiGate VMSS. Required when using an existing VNet; the value should match the subnet of the target VNet. When creating a new VNet, any input value will be ignored."
            }
        },
        "Subnet2Name": {
            "type": "String",
            "metadata": {
                "description": "Name of subnet 2, a subnet to be protected by the FortiGate. Required when using an existing Net; the value should match the subnet of the target VNet. When creating a new VNet, any input value will be ignored."
            }
        },
        "Subnet3Name": {
            "type": "String",
            "metadata": {
                "description": "Name of subnet 3, a subnet to be protected by the FortiGate. Required when using an existing VNet; the value should match the subnet of the target VNet. When creating a new VNet, any input value will be ignored."
            }
        },
        "Subnet4Name": {
            "type": "String",
            "metadata": {
                "description": "Name of subnet 4, a subnet to be protected by the FortiGate. Required when using an existing VNet; the value should match the subnet of the target VNet. When creating a new VNet, any input value will be ignored."
            }
        },
        "VNetResourceGroupName": {
            "type": "String",
            "metadata": {
                "description": "'VNetResourceGroupName' value found in the output of the old deployment template."
            }
        },
        "VnetAddressSpace": {
            "type": "String",
            "metadata": {
                "description": "IP address space of the existing VNet in CIDR notation. E.g. 10.0.0.0/16."
            }
        },
        "VnetName": {
            "type": "String",
            "metadata": {
                "description": "Name of the existing VNet that connects to FortiGate Autoscale."
            }
        }
    },
    "variables": {
        "accessRestrictionIPArray": "[split(parameters('AccessRestrictionIPRange'), ',')]",
        "accessRestrictionIPCount": "[if(empty(parameters('AccessRestrictionIPRange')), 0, length(variables('accessRestrictionIPArray')))]",
        "accessRestrictionIPString": "[if(empty(parameters('AccessRestrictionIPRange')), '', concat(parameters('AccessRestrictionIPRange'), ','))]",
        "autoscaleAssetContainerName": "fortigate-autoscale",
        "autoscaleSettingsNameBYOLOld": "[concat(parameters('ResourceNamePrefix'), '-autoscalesettings-byol')]",
        "autoscaleSettingsNamePAYGOld": "[concat(parameters('ResourceNamePrefix'), '-autoscalesettings-payg')]",
        "cmdDeleteOldAutoscaleAll": "[concat('az account set -s ', subscription().subscriptionId, ';', variables('cmdDeleteOldVMSSAll'), variables('cmdDeleteOldDatabaseAll'))]",
        "cmdDeleteOldAutoscaleSettings": "[concat('az monitor autoscale delete', ' -g ', variables('vNetResourceGroupName'), ' -n ', variables('autoscaleSettingsNameBYOLOld'), ';', 'az monitor autoscale delete -g ', variables('vNetResourceGroupName'), ' -n ', variables('autoscaleSettingsNamePAYGOld'), ';')]",
        "cmdDeleteOldDatabase": "[concat('az cosmosdb database delete -y -g ', resourceGroup().name, ' -n ', variables('databaseName'), ';')]",
        "cmdDeleteOldDatabaseAccount": "[concat('az cosmosdb delete -y -g ', resourceGroup().name, ' -n ', variables('databaseAccountNameOld'), ';')]",
        "cmdDeleteOldDatabaseAll": "[concat('az account set -s ', subscription().subscriptionId, ';', variables('cmdDeleteOldDatabase'), variables('cmdDeleteOldDatabaseAccount'))]",
        "cmdDeleteOldVMSS": "[concat('az vmss delete', ' -g ', variables('vNetResourceGroupName'),' -n ', variables('vmssNameBYOLOld'), ';', 'az vmss delete -g ', variables('vNetResourceGroupName'),' -n ', variables('vmssNamePAYGOld'), ';')]",
        "cmdDeleteOldVMSSAll": "[concat(variables('cmdDeleteOldAutoscaleSettings'), variables('cmdDeleteOldVMSS'), ';')]",
        "databaseAccountNameOld": "[concat(toLower(variables('uniqueResourceNamePrefix')),'dba001')]",
        "databaseAccountName": "[concat(toLower(variables('uniqueResourceNamePrefix')),'dba002')]",
        "databaseName": "FortiGateAutoscale",
        "databaseSharedThroughput": "[add(add(variables('databaseSharedThroughputBase'), if(variables('enableHybridLicensing'), 200, 0)), if(variables('enableFortiAnalyzer'), 100, 0))]",
        "databaseSharedThroughputBase": 500,
        "enableFortiAnalyzer": "[equals(parameters('FortiAnalyzerIntegrationOptions'), 'yes')]",
        "enableHybridLicensing": true,
        "extLBInboundNatPoolHTTPSBYOL": "[concat(variables('vmssNameBYOLOld'), '-nat-pool-https')]",
        "extLBInboundNatPoolHTTPSPAYG": "[concat(variables('vmssNamePAYGOld'), '-nat-pool-https')]",
        "extLBInboundNatPoolSSHBYOL": "[concat(variables('vmssNameBYOLOld'), '-nat-pool-ssh')]",
        "extLBInboundNatPoolSSHPAYG": "[concat(variables('vmssNamePAYGOld'), '-nat-pool-ssh')]",
        "externalLoadBalancerName": "[concat(parameters('ResourceNamePrefix'), '-external-load-balancer')]",
        "funcAppIPResrictionPriority": 100,
        "funcAppIPResrictions": {
            "copy": [
                {
                    "name": "ipRangeRestriction",
                    "count": "[variables('accessRestrictionIPCount')]",
                    "input": {
                        "name": "[concat('allow-external-ipv4-', copyIndex('ipRangeRestriction', 1))]",
                        "ipAddress": "[variables('accessRestrictionIPArray')[copyIndex('ipRangeRestriction')]]",
                        "action": "Allow",
                        "tag": "Default",
                        "priority": "[add(variables('funcAppIPResrictionPriority'), copyIndex('ipRangeRestriction', 1))]"
                    }
                }
            ]
        },
        "funcAppIpSecurityRestrictions": "[concat(variables('funcAppVNetResrictions'), variables('funcAppIPResrictions').ipRangeRestriction)]",
        "funcAppVNetResrictions": [
            {
                "vnetSubnetResourceId": "[concat(variables('vNetId'), '/subnets/', variables('subnet1Name'))]",
                "action": "Allow",
                "tag": "Default",
                "priority": "[variables('funcAppIPResrictionPriority')]",
                "name": "allow-FortiGate-subnet"
            }
        ],
        "functionAppName": "[concat(variables('uniqueResourceNamePrefix'),'funcapp002')]",
        "ifBYOLOnly": "[and(not(equals(parameters('MaxBYOLInstanceCount'), 0)), not(equals(parameters('MaxBYOLInstanceCount'), 0)), equals(parameters('MinPAYGInstanceCount'), 0), equals(parameters('MaxPAYGInstanceCount'), 0))]",
        "ifPAYGOnly": "[equals(parameters('BYOLInstanceCount'), 0)]",
        "internalLoadBalancerName": "[concat(parameters('ResourceNamePrefix'), '-internal-load-balancer')]",
        "keyVaultName": "[if(empty(parameters('KeyVaultName')), concat(toLower(variables('uniqueResourceNamePrefix')),'kv002'), parameters('KeyVaultName'))]",
        "licenseFileDirectory": "license-files",
        "licensingModel": "[if(variables('ifPAYGOnly'), 'paygonly', if(variables('ifBYOLOnly'), 'byolonly', 'hybrid'))]",
        "licensingModelName": "[if(variables('ifPAYGOnly'), 'PAYG-Only', if(variables('ifBYOLOnly'), 'BYOL-Only', 'Hybrid'))]",
        "loadBalancerBackendIPPoolNameSubnet1": "[concat(parameters('ResourceNamePrefix'), '-backend-ip-pool-subnet-1')]",
        "loadBalancerBackendIPPoolNameSubnet2": "[concat(parameters('ResourceNamePrefix'), '-backend-ip-pool-subnet-2')]",
        "loadBalancerBackendIPPoolNameSubnet3": "[concat(parameters('ResourceNamePrefix'), '-backend-ip-pool-subnet-3')]",
        "loadBalancerBackendIPPoolNameSubnet4": "[concat(parameters('ResourceNamePrefix'), '-backend-ip-pool-subnet-4')]",
        "location": "[resourceGroup().location]",
        "natBackendPortHTTPS": 8443,
        "storageAccountName": "[concat(toLower(variables('uniqueResourceNamePrefix')),'sta002')]",
        "subnet1Id": "[concat(variables('vnetID'), '/subnets/', variables('subnet1Name'))]",
        "subnet1Name": "[parameters('Subnet1Name')]",
        "subnet2Name": "[parameters('Subnet2Name')]",
        "subnet3Name": "[parameters('Subnet3Name')]",
        "subnet4Name": "[parameters('Subnet4Name')]",
        "uniqueId": "[take(uniquestring(resourceGroup().id), 8)]",
        "uniqueResourceNamePrefix": "[concat(parameters('ResourceNamePrefix'), variables('uniqueId'))]",
        "vNetName": "[parameters('VnetName')]",
        "vNetResourceGroupName": "[parameters('VNetResourceGroupName')]",
        "vmImgReferenceFazBYOL": {
            "publisher": "fortinet",
            "offer": "fortinet-fortianalyzer",
            "sku": "fortinet-fortianalyzer",
            "version": "[parameters('FortiAnalyzerVersion')]"
        },
        "vmImgReferenceFgtBYOL": {
            "publisher": "fortinet",
            "offer": "fortinet_fortigate-vm_v5",
            "sku": "fortinet_fg-vm",
            "version": "[parameters('FOSVersion')]"
        },
        "vmImgReferenceFgtPAYG": {
            "publisher": "fortinet",
            "offer": "fortinet_fortigate-vm_v5",
            "sku": "fortinet_fg-vm_payg_20190624",
            "version": "[parameters('FOSVersion')]"
        },
        "vmssNameBYOL": "[concat(parameters('ResourceNamePrefix'), 'byol002')]",
        "vmssNameBYOLOld": "[concat(parameters('ResourceNamePrefix'), 'byol')]",
        "vmssNamePAYG": "[concat(parameters('ResourceNamePrefix'), 'payg002')]",
        "vmssNamePAYGOld": "[concat(parameters('ResourceNamePrefix'), 'payg')]",
        "vmssNamePrimary": "[if(variables('ifPAYGOnly'), variables('vmssNamePAYG'), variables('vmssNameBYOL'))]",
        "vnetID": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', variables('vNetResourceGroupName'), '/providers/Microsoft.Network/virtualNetworks/', variables('vNetName'))]"
    },
    "resources": [
        {
            "apiVersion": "2019-06-01",
            "kind": "Storage",
            "location": "[variables('location')]",
            "name": "[variables('storageAccountName')]",
            "sku": {
                "name": "[parameters('StorageAccountType')]",
                "tier": "Standard"
            },
            "type": "Microsoft.Storage/storageAccounts"
        },
        {
            "apiVersion": "2019-09-01",
            "location": "[variables('location')]",
            "name": "[variables('keyVaultName')]",
            "properties": {
                "enabledForDeployment": false,
                "enabledForDiskEncryption": false,
                "enabledForTemplateDeployment": true,
                "tenantId": "[subscription().tenantId]",
                "accessPolicies": [
                    {
                        "objectId": "[parameters('ServicePrincipalObjectID')]",
                        "tenantId": "[subscription().tenantId]",
                        "permissions": {
                            "keys": ["List", "Get"],
                            "secrets": ["List", "Get"]
                        }
                    }
                ],
                "sku": {
                    "name": "Standard",
                    "family": "A"
                },
                "networkAcls": {
                    "defaultAction": "Allow",
                    "bypass": "AzureServices"
                }
            },
            "type": "Microsoft.KeyVault/vaults"
        },
        {
            "apiVersion": "2019-09-01",
            "dependsOn": ["[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]"],
            "location": "[variables('location')]",
            "name": "[concat(variables('keyVaultName'), '/', 'faz-autoscale-admin-username')]",
            "properties": {
                "value": "[parameters('FortiAnalyzerAutoscaleAdminUsername')]"
            },
            "type": "Microsoft.KeyVault/vaults/secrets"
        },
        {
            "apiVersion": "2019-09-01",
            "dependsOn": ["[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]"],
            "location": "[variables('location')]",
            "name": "[concat(variables('keyVaultName'), '/', 'faz-autoscale-admin-password')]",
            "properties": {
                "value": "[parameters('FortiAnalyzerAutoscaleAdminPassword')]"
            },
            "type": "Microsoft.KeyVault/vaults/secrets"
        },
        {
            "apiVersion": "2019-06-01",
            "dependsOn": ["[variables('storageAccountName')]"],
            "name": "[concat(variables('storageAccountName'), '/default/', variables('autoscaleAssetContainerName'))]",
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers"
        },
        {
            "apiVersion": "2016-03-31",
            "location": "[variables('location')]",
            "name": "[variables('databaseAccountName')]",
            "properties": {
                "name": "[variables('databaseAccountName')]",
                "databaseAccountOfferType": "Standard",
                "locations": [
                    {
                        "locationName": "[variables('location')]"
                    }
                ]
            },
            "type": "Microsoft.DocumentDb/databaseAccounts"
        },
        {
            "apiVersion": "2016-03-31",
            "dependsOn": ["[variables('databaseAccountName')]"],
            "name": "[concat(variables('databaseAccountName'), '/sql/', variables('databaseName'))]",
            "properties": {
                "resource": {
                    "id": "[variables('databaseName')]"
                },
                "options": {
                    "throughput": "[variables('databaseSharedThroughput')]"
                }
            },
            "type": "Microsoft.DocumentDB/databaseAccounts/apis/databases"
        },
        {
            "apiVersion": "2016-03-31",
            "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts/apis/databases', variables('databaseAccountName'), 'sql', variables('databaseName'))]"
            ],
            "name": "[concat(variables('databaseAccountName'), '/sql/', variables('databaseName'), '/Autoscale')]",
            "properties": {
                "resource": {
                    "id": "Autoscale",
                    "partitionKey": {
                        "paths": ["/vmId"],
                        "kind": "Hash"
                    },
                    "indexingPolicy": {
                        "indexingMode": "consistent",
                        "includedPaths": [
                            {
                                "path": "/*",
                                "indexes": [
                                    {
                                        "kind": "Range",
                                        "dataType": "number",
                                        "precision": -1
                                    },
                                    {
                                        "kind": "Range",
                                        "dataType": "string",
                                        "precision": -1
                                    }
                                ]
                            }
                        ],
                        "excludedPaths": [
                            {
                                "path": "/\"_etag\"/?"
                            }
                        ]
                    }
                },
                "options": {}
            },
            "type": "Microsoft.DocumentDb/databaseAccounts/apis/databases/containers"
        },
        {
            "apiVersion": "2016-03-31",
            "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts/apis/databases', variables('databaseAccountName'), 'sql', variables('databaseName'))]"
            ],
            "name": "[concat(variables('databaseAccountName'), '/sql/', variables('databaseName'), '/PrimaryElection')]",
            "properties": {
                "resource": {
                    "id": "PrimaryElection",
                    "partitionKey": {
                        "paths": ["/id"],
                        "kind": "Hash"
                    },
                    "indexingPolicy": {
                        "indexingMode": "consistent",
                        "includedPaths": [
                            {
                                "path": "/*",
                                "indexes": [
                                    {
                                        "kind": "Range",
                                        "dataType": "number",
                                        "precision": -1
                                    },
                                    {
                                        "kind": "Range",
                                        "dataType": "string",
                                        "precision": -1
                                    }
                                ]
                            }
                        ],
                        "excludedPaths": [
                            {
                                "path": "/\"_etag\"/?"
                            }
                        ]
                    }
                },
                "options": {}
            },
            "type": "Microsoft.DocumentDb/databaseAccounts/apis/databases/containers"
        },
        {
            "apiVersion": "2016-03-31",
            "condition": "[variables('enableFortiAnalyzer')]",
            "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts/apis/databases', variables('databaseAccountName'), 'sql', variables('databaseName'))]"
            ],
            "name": "[concat(variables('databaseAccountName'), '/sql/', variables('databaseName'), '/FortiAnalyzer')]",
            "properties": {
                "resource": {
                    "id": "FortiAnalyzer",
                    "partitionKey": {
                        "paths": ["/vmId"],
                        "kind": "Hash"
                    },
                    "indexingPolicy": {
                        "indexingMode": "consistent",
                        "includedPaths": [
                            {
                                "path": "/*",
                                "indexes": [
                                    {
                                        "kind": "Range",
                                        "dataType": "number",
                                        "precision": -1
                                    },
                                    {
                                        "kind": "Range",
                                        "dataType": "string",
                                        "precision": -1
                                    }
                                ]
                            }
                        ],
                        "excludedPaths": [
                            {
                                "path": "/\"_etag\"/?"
                            }
                        ]
                    }
                },
                "options": {}
            },
            "type": "Microsoft.DocumentDb/databaseAccounts/apis/databases/containers"
        },
        {
            "apiVersion": "2016-03-31",
            "condition": "[variables('enableHybridLicensing')]",
            "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts/apis/databases', variables('databaseAccountName'), 'sql', variables('databaseName'))]"
            ],
            "name": "[concat(variables('databaseAccountName'), '/sql/', variables('databaseName'), '/LicenseStock')]",
            "properties": {
                "resource": {
                    "id": "LicenseStock",
                    "partitionKey": {
                        "paths": ["/checksum"],
                        "kind": "Hash"
                    },
                    "indexingPolicy": {
                        "indexingMode": "consistent",
                        "includedPaths": [
                            {
                                "path": "/*",
                                "indexes": [
                                    {
                                        "kind": "Range",
                                        "dataType": "number",
                                        "precision": -1
                                    },
                                    {
                                        "kind": "Range",
                                        "dataType": "string",
                                        "precision": -1
                                    }
                                ]
                            }
                        ],
                        "excludedPaths": [
                            {
                                "path": "/\"_etag\"/?"
                            }
                        ]
                    }
                },
                "options": {}
            },
            "type": "Microsoft.DocumentDb/databaseAccounts/apis/databases/containers"
        },
        {
            "apiVersion": "2016-03-31",
            "condition": "[bool(variables('enableHybridLicensing'))]",
            "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts/apis/databases', variables('databaseAccountName'), 'sql', variables('databaseName'))]"
            ],
            "name": "[concat(variables('databaseAccountName'), '/sql/', variables('databaseName'), '/LicenseUsage')]",
            "properties": {
                "resource": {
                    "id": "LicenseUsage",
                    "partitionKey": {
                        "paths": ["/id"],
                        "kind": "Hash"
                    },
                    "indexingPolicy": {
                        "indexingMode": "consistent",
                        "includedPaths": [
                            {
                                "path": "/*",
                                "indexes": [
                                    {
                                        "kind": "Range",
                                        "dataType": "number",
                                        "precision": -1
                                    },
                                    {
                                        "kind": "Range",
                                        "dataType": "string",
                                        "precision": -1
                                    }
                                ]
                            }
                        ],
                        "excludedPaths": [
                            {
                                "path": "/\"_etag\"/?"
                            }
                        ]
                    }
                },
                "options": {}
            },
            "type": "Microsoft.DocumentDb/databaseAccounts/apis/databases/containers"
        },
        {
            "apiVersion": "2016-03-31",
            "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts/apis/databases', variables('databaseAccountName'), 'sql', variables('databaseName'))]"
            ],
            "name": "[concat(variables('databaseAccountName'), '/sql/', variables('databaseName'), '/CustomLog')]",
            "properties": {
                "resource": {
                    "id": "CustomLog",
                    "partitionKey": {
                        "paths": ["/id"],
                        "kind": "Hash"
                    },
                    "indexingPolicy": {
                        "indexingMode": "consistent",
                        "includedPaths": [
                            {
                                "path": "/*",
                                "indexes": [
                                    {
                                        "kind": "Range",
                                        "dataType": "number",
                                        "precision": -1
                                    },
                                    {
                                        "kind": "Range",
                                        "dataType": "string",
                                        "precision": -1
                                    }
                                ]
                            }
                        ],
                        "excludedPaths": [
                            {
                                "path": "/\"_etag\"/?"
                            }
                        ]
                    }
                },
                "options": {}
            },
            "type": "Microsoft.DocumentDb/databaseAccounts/apis/databases/containers"
        },
        {
            "apiVersion": "2016-03-31",
            "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts/apis/databases', variables('databaseAccountName'), 'sql', variables('databaseName'))]"
            ],
            "name": "[concat(variables('databaseAccountName'), '/sql/', variables('databaseName'), '/ApiRequestCache')]",
            "properties": {
                "resource": {
                    "id": "ApiRequestCache",
                    "partitionKey": {
                        "paths": ["/id"],
                        "kind": "Hash"
                    },
                    "indexingPolicy": {
                        "indexingMode": "consistent",
                        "includedPaths": [
                            {
                                "path": "/*",
                                "indexes": [
                                    {
                                        "kind": "Range",
                                        "dataType": "number",
                                        "precision": -1
                                    },
                                    {
                                        "kind": "Range",
                                        "dataType": "string",
                                        "precision": -1
                                    }
                                ]
                            }
                        ],
                        "excludedPaths": [
                            {
                                "path": "/\"_etag\"/?"
                            }
                        ]
                    }
                },
                "options": {}
            },
            "type": "Microsoft.DocumentDb/databaseAccounts/apis/databases/containers"
        },
        {
            "apiVersion": "2016-03-31",
            "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts/apis/databases', variables('databaseAccountName'), 'sql', variables('databaseName'))]"
            ],
            "name": "[concat(variables('databaseAccountName'), '/sql/', variables('databaseName'), '/Settings')]",
            "properties": {
                "resource": {
                    "id": "Settings",
                    "partitionKey": {
                        "paths": ["/settingKey"],
                        "kind": "Hash"
                    },
                    "indexingPolicy": {
                        "indexingMode": "consistent",
                        "includedPaths": [
                            {
                                "path": "/*",
                                "indexes": [
                                    {
                                        "kind": "Range",
                                        "dataType": "number",
                                        "precision": -1
                                    },
                                    {
                                        "kind": "Range",
                                        "dataType": "string",
                                        "precision": -1
                                    }
                                ]
                            }
                        ],
                        "excludedPaths": [
                            {
                                "path": "/\"_etag\"/?"
                            }
                        ]
                    }
                },
                "options": {}
            },
            "type": "Microsoft.DocumentDb/databaseAccounts/apis/databases/containers"
        },
        {
            "apiVersion": "2018-05-01",
            "dependsOn": ["[variables('databaseAccountName')]", "SetupFunctionApp"],
            "name": "SetupFuncAppIpRestrictions",
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "apiVersion": "2018-11-01",
                            "type": "Microsoft.Web/sites",
                            "name": "[variables('functionAppName')]",
                            "kind": "functionapp",
                            "location": "[variables('location')]",
                            "properties": {
                                "siteConfig": {
                                    "ipSecurityRestrictions": "[variables('funcAppIpSecurityRestrictions')]"
                                }
                            }
                        }
                    ]
                }
            },
            "resourceGroup": "[resourceGroup().name]",
            "subscriptionId": "[subscription().subscriptionId]",
            "type": "Microsoft.Resources/deployments"
        },
        {
            "apiVersion": "2018-05-01",
            "dependsOn": ["[variables('databaseAccountName')]", "SetupFunctionApp"],
            "name": "SetupDBAccessRestrictions",
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "apiVersion": "2019-08-01",
                            "type": "Microsoft.DocumentDb/databaseAccounts",
                            "name": "[variables('databaseAccountName')]",
                            "location": "[variables('location')]",
                            "properties": {
                                "databaseAccountOfferType": "Standard",
                                "ipRangeFilter": "[concat(variables('accessRestrictionIPString'), reference('CreateFunctionApp').outputs.functionAppPossibleOutboundIpAddresses.value)]",
                                "isVirtualNetworkFilterEnabled": true,
                                "virtualNetworkRules": [
                                    {
                                        "id": "[concat(variables('vNetId'), '/subnets/', variables('subnet1Name'))]",
                                        "ignoreMissingVNetServiceEndpoint": false
                                    }
                                ],
                                "locations": [
                                    {
                                        "locationName": "[variables('location')]"
                                    }
                                ]
                            }
                        }
                    ]
                }
            },
            "resourceGroup": "[resourceGroup().name]",
            "subscriptionId": "[subscription().subscriptionId]",
            "type": "Microsoft.Resources/deployments"
        },
        {
            "apiVersion": "2018-05-01",
            "condition": "[variables('enableFortiAnalyzer')]",
            "name": "FortiAnalyzerIntegrationResources",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "https://raw.githubusercontent.com/fortinet/fortigate-autoscale-azure/3.3.0/templates/linked_template.faz_integration.json"
                },
                "parameters": {
                    "AdminPassword": {
                        "value": "[parameters('AdminPassword')]"
                    },
                    "AdminUsername": {
                        "value": "[parameters('AdminUsername')]"
                    },
                    "FortiAnalyzerAutoscaleAdminPassword": {
                        "value": "[parameters('FortiAnalyzerAutoscaleAdminPassword')]"
                    },
                    "FortiAnalyzerAutoscaleAdminUsername": {
                        "value": "[parameters('FortiAnalyzerAutoscaleAdminUsername')]"
                    },
                    "FortiAnalyzerCustomPrivateIPAddress": {
                        "value": "[parameters('FortiAnalyzerCustomPrivateIPAddress')]"
                    },
                    "FortiAnalyzerInstanceType": {
                        "value": "[parameters('FortiAnalyzerInstanceType')]"
                    },
                    "SubnetId": {
                        "value": "[variables('subnet1Id')]"
                    },
                    "UniqueResourceNamePrefix": {
                        "value": "[variables('uniqueResourceNamePrefix')]"
                    },
                    "VmImgReferenceFaz": {
                        "value": "[variables('vmImgReferenceFazBYOL')]"
                    }
                }
            },
            "resourceGroup": "[resourceGroup().name]",
            "subscriptionId": "[subscription().subscriptionId]",
            "type": "Microsoft.Resources/deployments"
        },
        {
            "apiVersion": "2018-05-01",
            "dependsOn": ["[variables('storageAccountName')]"],
            "name": "CreateFunctionApp",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "https://raw.githubusercontent.com/fortinet/fortigate-autoscale-azure/3.3.0/templates/linked_template.function_app.json"
                },
                "parameters": {
                    "FunctionAppName": {
                        "value": "[variables('functionAppName')]"
                    },
                    "FunctionExtensionVersion": {
                        "value": "~3"
                    },
                    "NodeJSRuntimeVersion": {
                        "value": "~12"
                    },
                    "PackageResURL": {
                        "value": "[parameters('PackageResURL')]"
                    },
                    "ServicePlanTier": {
                        "value": "[parameters('ServicePlanTier')]"
                    },
                    "StorageAccountName": {
                        "value": "[variables('storageAccountName')]"
                    }
                }
            },
            "resourceGroup": "[resourceGroup().name]",
            "subscriptionId": "[subscription().subscriptionId]",
            "type": "Microsoft.Resources/deployments"
        },
        {
            "apiVersion": "2018-05-01",
            "dependsOn": [
                "CreateFunctionApp",
                "[variables('databaseAccountName')]",
                "[variables('keyVaultName')]",
                "[variables('storageAccountName')]",
                "FortiAnalyzerIntegrationResources"
            ],
            "name": "SetupFunctionApp",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "https://raw.githubusercontent.com/fortinet/fortigate-autoscale-azure/3.3.0/templates/linked_template.function_app.setup.json"
                },
                "parameters": {
                    "AdminPortNumber": {
                        "value": "[variables('natBackendPortHTTPS')]"
                    },
                    "BYOLInstanceCount": {
                        "value": "[parameters('BYOLInstanceCount')]"
                    },
                    "DatabaseAccountName": {
                        "value": "[variables('databaseAccountName')]"
                    },
                    "DatabaseName": {
                        "value": "[variables('databaseName')]"
                    },
                    "FortiAnalyzerIntegrationOptions": {
                        "value": "[if(variables('enableFortiAnalyzer'), 'yes', 'no')]"
                    },
                    "FortiAnalyzerPublicIp": {
                        "value": "[if(variables('enableFortiAnalyzer'), reference('FortiAnalyzerIntegrationResources').outputs.fazPublicIp.value, '')]"
                    },
                    "FortiGatePSKSecret": {
                        "value": "[parameters('FortiGatePSKSecret')]"
                    },
                    "FunctionAppInsightName": {
                        "value": "[reference('CreateFunctionApp').outputs.functionAppInsightName.value]"
                    },
                    "FunctionAppName": {
                        "value": "[variables('functionAppName')]"
                    },
                    "FunctionAppResourceGroupName": {
                        "value": "[resourceGroup().name]"
                    },
                    "FunctionNameFazAuthHandler": {
                        "value": "[reference('CreateFunctionApp').outputs.functionNameFazAuthHandler.value]"
                    },
                    "FunctionNameFgtAsHandler": {
                        "value": "[reference('CreateFunctionApp').outputs.functionNameFgtAsHandler.value]"
                    },
                    "HeartBeatDelayAllowance": {
                        "value": "[parameters('HeartBeatDelayAllowance')]"
                    },
                    "HeartBeatInterval": {
                        "value": "[parameters('HeartBeatInterval')]"
                    },
                    "HeartBeatLossCount": {
                        "value": "[parameters('HeartBeatLossCount')]"
                    },
                    "KeyVaultName": {
                        "value": "[variables('keyVaultName')]"
                    },
                    "LicenseFileDirectory": {
                        "value": "[variables('licenseFileDirectory')]"
                    },
                    "MaxBYOLInstanceCount": {
                        "value": "[parameters('MaxBYOLInstanceCount')]"
                    },
                    "MaxPAYGInstanceCount": {
                        "value": "[parameters('MaxPAYGInstanceCount')]"
                    },
                    "MinBYOLInstanceCount": {
                        "value": "[parameters('MinBYOLInstanceCount')]"
                    },
                    "PAYGInstanceCount": {
                        "value": "[parameters('PAYGInstanceCount')]"
                    },
                    "PackageResURL": {
                        "value": "[parameters('PackageResURL')]"
                    },
                    "PrimaryElectionTimeout": {
                        "value": "[parameters('PrimaryElectionTimeout')]"
                    },
                    "ScaleSetNameBYOL": {
                        "value": "[variables('vmssNameBYOL')]"
                    },
                    "ScaleSetNamePAYG": {
                        "value": "[variables('vmssNamePAYG')]"
                    },
                    "ScaleSetNamePrimary": {
                        "value": "[variables('vmssNamePrimary')]"
                    },
                    "ServicePrincipalAppID": {
                        "value": "[parameters('ServicePrincipalAppID')]"
                    },
                    "ServicePrincipalAppSecret": {
                        "value": "[parameters('ServicePrincipalAppSecret')]"
                    },
                    "StorageAccountName": {
                        "value": "[variables('storageAccountName')]"
                    },
                    "TrafficPortNumber": {
                        "value": "[variables('natBackendPortHTTPS')]"
                    },
                    "UniqueResourceNamePrefix": {
                        "value": "[variables('uniqueResourceNamePrefix')]"
                    },
                    "VnetAddressSpace": {
                        "value": "[parameters('VnetAddressSpace')]"
                    },
                    "VnetName": {
                        "value": "[variables('vNetName')]"
                    },
                    "VnetResourceGroupName": {
                        "value": "[variables('vNetResourceGroupName')]"
                    }
                }
            },
            "resourceGroup": "[resourceGroup().name]",
            "subscriptionId": "[subscription().subscriptionId]",
            "type": "Microsoft.Resources/deployments"
        },
        {
            "apiVersion": "2018-05-01",
            "dependsOn": ["CreateFunctionApp"],
            "name": "CreateVirtualMachineScaleSet",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "https://raw.githubusercontent.com/fortinet/fortigate-autoscale-azure/3.3.0/templates/linked_template.vmss.json"
                },
                "parameters": {
                    "AdminPassword": {
                        "value": "[parameters('AdminPassword')]"
                    },
                    "AdminUsername": {
                        "value": "[parameters('AdminUsername')]"
                    },
                    "BYOLInstanceCount": {
                        "value": "[parameters('BYOLInstanceCount')]"
                    },
                    "ExtLBInboundNatPoolHTTPSBYOL": {
                        "value": "[variables('extLBInboundNatPoolHTTPSBYOL')]"
                    },
                    "ExtLBInboundNatPoolHTTPSPAYG": {
                        "value": "[variables('extLBInboundNatPoolHTTPSPAYG')]"
                    },
                    "ExtLBInboundNatPoolSSHBYOL": {
                        "value": "[variables('extLBInboundNatPoolSSHBYOL')]"
                    },
                    "ExtLBInboundNatPoolSSHPAYG": {
                        "value": "[variables('extLBInboundNatPoolSSHPAYG')]"
                    },
                    "ExternalLoadBalancerName": {
                        "value": "[variables('externalLoadBalancerName')]"
                    },
                    "VmImageReferenceFgtBYOL": {
                        "value": "[variables('vmImgReferenceFgtBYOL')]"
                    },
                    "VmImageReferenceFgtPAYG": {
                        "value": "[variables('vmImgReferenceFgtPAYG')]"
                    },
                    "FunctionAppName": {
                        "value": "[variables('functionAppName')]"
                    },
                    "FunctionAppResourceGroupName": {
                        "value": "[resourceGroup().name]"
                    },
                    "FunctionNameFgtAsHandler": {
                        "value": "[reference('CreateFunctionApp').outputs.functionNameFgtAsHandler.value]"
                    },
                    "FunctionNameLicenseHandler": {
                        "value": "[reference('CreateFunctionApp').outputs.functionNameLicenseHandler.value]"
                    },
                    "InstanceType": {
                        "value": "[parameters('InstanceType')]"
                    },
                    "InternalLoadBalancerName": {
                        "value": "[variables('internalLoadBalancerName')]"
                    },
                    "LicensingModel": {
                        "value": "[variables('licensingModel')]"
                    },
                    "LoadBalancerBackendIPPoolNameSubnet1": {
                        "value": "[variables('loadBalancerBackendIPPoolNameSubnet1')]"
                    },
                    "LoadBalancerBackendIPPoolNameSubnet2": {
                        "value": "[variables('loadBalancerBackendIPPoolNameSubnet2')]"
                    },
                    "LoadBalancerBackendIPPoolNameSubnet3": {
                        "value": "[variables('loadBalancerBackendIPPoolNameSubnet3')]"
                    },
                    "LoadBalancerBackendIPPoolNameSubnet4": {
                        "value": "[variables('loadBalancerBackendIPPoolNameSubnet4')]"
                    },
                    "MaxBYOLInstanceCount": {
                        "value": "[parameters('MaxBYOLInstanceCount')]"
                    },
                    "MaxPAYGInstanceCount": {
                        "value": "[parameters('MaxPAYGInstanceCount')]"
                    },
                    "MinBYOLInstanceCount": {
                        "value": "[parameters('MinBYOLInstanceCount')]"
                    },
                    "MinPAYGInstanceCount": {
                        "value": "[parameters('MinPAYGInstanceCount')]"
                    },
                    "PAYGInstanceCount": {
                        "value": "[parameters('PAYGInstanceCount')]"
                    },
                    "ResourceNamePrefix": {
                        "value": "[parameters('ResourceNamePrefix')]"
                    },
                    "ScaleInThreshold": {
                        "value": "[parameters('ScaleInThreshold')]"
                    },
                    "ScaleOutThreshold": {
                        "value": "[parameters('ScaleOutThreshold')]"
                    },
                    "StorageAccountName": {
                        "value": "[variables('storageAccountName')]"
                    },
                    "Subnet1Name": {
                        "value": "[variables('subnet1Name')]"
                    },
                    "Subnet2Name": {
                        "value": "[variables('subnet2Name')]"
                    },
                    "Subnet3Name": {
                        "value": "[variables('subnet3Name')]"
                    },
                    "Subnet4Name": {
                        "value": "[variables('subnet4Name')]"
                    },
                    "UniqueResourceNamePrefix": {
                        "value": "[variables('uniqueResourceNamePrefix')]"
                    },
                    "VmssNameBYOL": {
                        "value": "[variables('vmssNameBYOL')]"
                    },
                    "VmssNamePAYG": {
                        "value": "[variables('vmssNamePAYG')]"
                    },
                    "VnetName": {
                        "value": "[variables('vNetName')]"
                    }
                }
            },
            "resourceGroup": "[variables('vNetResourceGroupName')]",
            "subscriptionId": "[subscription().subscriptionId]",
            "type": "Microsoft.Resources/deployments"
        }
    ],
    "outputs": {
        "autoscaleAssetContainerName": {
            "type": "String",
            "value": "[variables('autoscaleAssetContainerName')]"
        },
        "byolAutoscaleSettingsName": {
            "type": "String",
            "value": "[reference('CreateVirtualMachineScaleSet').outputs.byolAutoscaleSettingsName.value]"
        },
        "byolScaleSetDefaultSize": {
            "type": "Int",
            "value": "[reference('CreateVirtualMachineScaleSet').outputs.byolScaleSetDefaultSize.value]"
        },
        "byolScaleSetMaxSize": {
            "type": "Int",
            "value": "[reference('CreateVirtualMachineScaleSet').outputs.byolScaleSetMaxSize.value]"
        },
        "byolScaleSetMinSize": {
            "type": "Int",
            "value": "[reference('CreateVirtualMachineScaleSet').outputs.byolScaleSetMinSize.value]"
        },
        "byolScaleSetName": {
            "type": "String",
            "value": "[reference('CreateVirtualMachineScaleSet').outputs.byolScaleSetName.value]"
        },
        "cmdDeleteOldAutoscaleComponents": {
            "type": "String",
            "value": "[concat(variables('cmdDeleteOldAutoscaleAll'))]"
        },
        "deploymentPackageVersion": {
            "type": "string",
            "value": "3.3.0"
        },
        "fazPublicIp": {
            "type": "String",
            "value": "[if(variables('enableFortiAnalyzer'), reference('FortiAnalyzerIntegrationResources').outputs.fazPublicIp.value, 'n/a')]"
        },
        "fgtLicensingModel": {
            "type": "String",
            "value": "[variables('licensingModelName')]"
        },
        "licenseFileDirectory": {
            "type": "String",
            "value": "[variables('licenseFileDirectory')]"
        },
        "paygAutoscaleSettingsName": {
            "type": "String",
            "value": "[reference('CreateVirtualMachineScaleSet').outputs.paygAutoscaleSettingsName.value]"
        },
        "paygScaleSetDefaultSize": {
            "type": "Int",
            "value": "[reference('CreateVirtualMachineScaleSet').outputs.paygScaleSetDefaultSize.value]"
        },
        "paygScaleSetMaxSize": {
            "type": "Int",
            "value": "[reference('CreateVirtualMachineScaleSet').outputs.paygScaleSetMaxSize.value]"
        },
        "paygScaleSetMinSize": {
            "type": "Int",
            "value": "[reference('CreateVirtualMachineScaleSet').outputs.paygScaleSetMinSize.value]"
        },
        "paygScaleSetName": {
            "type": "String",
            "value": "[reference('CreateVirtualMachineScaleSet').outputs.paygScaleSetName.value]"
        },
        "resourceGroupName": {
            "type": "String",
            "value": "[resourceGroup().name]"
        },
        "storageAccountName": {
            "type": "String",
            "value": "[variables('storageAccountName')]"
        },
        "uniqueResourceNamePrefix": {
            "type": "String",
            "value": "[variables('uniqueResourceNamePrefix')]"
        },
        "vNetResourceGroupName": {
            "type": "String",
            "value": "[variables('vNetResourceGroupName')]"
        }
    }
}
