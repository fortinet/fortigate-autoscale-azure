{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "3.3.0.0",
    "parameters": {
        "ExternalLBFrontendIPId": {
            "type": "String"
        },
        "ExternalLBNATBackendPortHTTPS": {
            "type": "Int"
        },
        "ExternalLBNATBackendPortSSH": {
            "type": "Int"
        },
        "ExternalLBRules": {
            "type": "Array"
        },
        "InternalLBFrontendIPAddress": {
            "type": "String"
        },
        "InternalLBFrontendSubnetId": {
            "type": "String"
        },
        "UniqueResourceNamePrefix": {
            "type": "String"
        },
        "VMSSNameBYOL": {
            "type": "String"
        },
        "VMSSNamePAYG": {
            "type": "String"
        }
    },
    "variables": {
        "cmdDeleteAll": "[concat('az account set -s ', subscription().subscriptionId, ';', variables('cmdDeleteExternalLB'), if(variables('ifCreateInternalLB'), variables('cmdDeleteInternalLB'), ''), if(variables('ifCreateExternalLBPublicFrontendIP'), variables('cmdDeleteExternalLBPublicFrontendIP'), ''))]",
        "cmdDeleteExternalLB": "[concat('az network lb delete -g ', resourceGroup().name,' -n ', variables('externalLoadBalancerName'), ';')]",
        "cmdDeleteExternalLBPublicFrontendIP": "[if(variables('ifCreateExternalLBPublicFrontendIP'), concat('az network public-ip delete -g ', resourceGroup().name,' -n ', variables('externalLBFrontendIPName'), ';'), '')]",
        "cmdDeleteInternalLB": "[concat('az network lb delete -g ', resourceGroup().name,' -n ', variables('internalLoadBalancerName'), ';')]",
        "extLBInboundNATFrontendPortRangeLength": 1000,
        "extLBInboundNATFrontendPortRangeMax": "[add(variables('extLBInboundNATFrontendPortRangeMin'), add(variables('extLBInboundNATFrontendPortRangeLength') , -1))]",
        "extLBInboundNATFrontendPortRangeMin": 0,
        "extLBInboundNATFrontendPortRangeVMSSBYOLHTTPS": "[createArray(add(40000, variables('extLBInboundNATFrontendPortRangeMin')), add(40000, variables('extLBInboundNATFrontendPortRangeMax')))]",
        "extLBInboundNATFrontendPortRangeVMSSBYOLSSH": "[createArray(add(50000, variables('extLBInboundNATFrontendPortRangeMin')), add(50000, variables('extLBInboundNATFrontendPortRangeMax')))]",
        "extLBInboundNATFrontendPortRangeVMSSPAYGHTTPS": "[createArray(add(20000, variables('extLBInboundNATFrontendPortRangeMin')), add(20000, variables('extLBInboundNATFrontendPortRangeMax')))]",
        "extLBInboundNATFrontendPortRangeVMSSPAYGSSH": "[createArray(add(30000, variables('extLBInboundNATFrontendPortRangeMin')), add(30000, variables('extLBInboundNATFrontendPortRangeMax')))]",
        "externalLBBackendAddressPool": {
            "copy": [
                {
                    "name": "iterations",
                    "count": "[length(variables('externalLBBackendAddressPools'))]",
                    "input": {
                        "id": "[concat(variables('externalLoadBalancerId'), '/backendAddressPools/',variables('externalLBBackendAddressPools')[copyIndex('iterations')].name)]"
                    }
                }
            ]
        },
        "externalLBBackendAddressPoolIds": {
            "copy": [
                {
                    "name": "iterations",
                    "count": "[length(variables('externalLBBackendAddressPool').iterations)]",
                    "input": "[variables('externalLBBackendAddressPool').iterations[copyIndex('iterations')].id]"
                }
            ]
        },
        "externalLBBackendAddressPools": [
            {
                "name": "[variables('externalLoadBalancerBackendAddressPoolName1')]"
            }
        ],
        "externalLBFrontendIPId": "[if(variables('ifCreateExternalLBPublicFrontendIP'), concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/publicIPAddresses/', variables('externalLBFrontendIPName')), parameters('ExternalLBFrontendIPId'))]",
        "externalLBFrontendIPName": "[concat(parameters('UniqueResourceNamePrefix'), '-ext-lb-public-ip')]",
        "externalLBInboundNATPoolHTTPSName": "[concat(variables('externalLoadBalancerName'), '-inbound-nat-pool-https')]",
        "externalLBInboundNATPoolSSHName": "[concat(variables('externalLoadBalancerName'), '-inbound-nat-pool-ssh')]",
        "externalLBInboundNatPoolIds": [
            "[resourceId(subscription().subscriptionId, resourceGroup().name, 'Microsoft.Network/loadBalancers/inboundNatPools', variables('externalLoadBalancerName'), variables('externalLBInboundNATPoolHTTPSName'))]",
            "[resourceId(subscription().subscriptionId, resourceGroup().name, 'Microsoft.Network/loadBalancers/inboundNatPools', variables('externalLoadBalancerName'), variables('externalLBInboundNATPoolSSHName'))]"
        ],
        "externalLBRules": {
            "copy": [
                {
                    "name": "iterations",
                    "count": "[div(length(parameters('ExternalLBRules')), 3)]",
                    "input": {
                        "name": "[concat(variables('externalLoadBalancerName'), '-rule-', parameters('ExternalLBRules')[add(0, copyIndex('iterations'))], '-', parameters('ExternalLBRules')[add(1, copyIndex('iterations'))], '-', parameters('ExternalLBRules')[add(2, copyIndex('iterations'))])]",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[variables('externalLoadBalancerFrontendIPConfigId1')]"
                            },
                            "backendAddressPool": "[variables('externalLBBackendAddressPool').iterations[0]]",
                            "protocol": "[parameters('ExternalLBRules')[add(0, mul(3, copyIndex('iterations')))]]",
                            "frontendPort": "[int(parameters('ExternalLBRules')[add(1, mul(3, copyIndex('iterations')))])]",
                            "backendPort": "[int(parameters('ExternalLBRules')[add(2, mul(3, copyIndex('iterations')))])]",
                            "loadDistribution": "SourceIP",
                            "enableFloatingIP": true,
                            "probe": {
                                "id": "[concat(variables('externalLoadBalancerId'), '/probes/tcpProbe')]"
                            }
                        }
                    }
                }
            ]
        },
        "externalLoadBalancerBackendAddressPoolName1": "[concat(variables('externalLoadBalancerName'), '-backend-ip-pool-subnet1')]",
        "externalLoadBalancerFrontendIPConfigId1": "[concat(variables('externalLoadBalancerId'), '/frontendIPConfigurations/', variables('externalLoadBalancerFrontendIPConfigName1'))]",
        "externalLoadBalancerFrontendIPConfigName1": "[concat(variables('externalLoadBalancerName'), '-frontend-ip-config1')]",
        "externalLoadBalancerId": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/loadBalancers/', variables('externalLoadBalancerName'))]",
        "externalLoadBalancerName": "[concat(parameters('UniqueResourceNamePrefix'), '-external-load-balancer')]",
        "ifCreateExternalLBPublicFrontendIP": "[empty(parameters('ExternalLBFrontendIPId'))]",
        "ifCreateInternalLB": "[and(not(empty(parameters('InternalLBFrontendIPAddress'))), not(empty(parameters('InternalLBFrontendSubnetId'))))]",
        "internalLoadBalancerBackendIPPoolId1": "[concat(variables('internalLoadBalancerId'), '/backendAddressPools/',variables('internalLoadBalancerBackendIPPoolName1'))]",
        "internalLoadBalancerBackendIPPoolName1": "[concat(variables('internalLoadBalancerName'), '-backend-ip-pool1')]",
        "internalLoadBalancerFrontendIPConfigId1": "[concat(variables('internalLoadBalancerId'), '/frontendIPConfigurations/', variables('internalLoadBalancerFrontendIPConfigName1'))]",
        "internalLoadBalancerFrontendIPConfigName1": "[concat(variables('internalLoadBalancerName'), '-frontend-ip-config1')]",
        "internalLoadBalancerId": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/loadBalancers/', variables('internalLoadBalancerName'))]",
        "internalLoadBalancerName": "[concat(parameters('UniqueResourceNamePrefix'), '-internal-load-balancer')]",
        "loadBalancerInboundNatPoolNameVMSSBYOLHTTPS": "[concat('vmss-', parameters('VMSSNameBYOL'), '-https')]",
        "loadBalancerInboundNatPoolNameVMSSBYOLSSH": "[concat('vmss-', parameters('VMSSNameBYOL'), '-ssh')]",
        "loadBalancerInboundNatPoolNameVMSSPAYGHTTPS": "[concat('vmss-', parameters('VMSSNamePAYG'), '-https')]",
        "loadBalancerInboundNatPoolNameVMSSPAYGSSH": "[concat('vmss-', parameters('VMSSNamePAYG'), '-ssh')]"
    },
    "resources": [
        {
            "condition": "[variables('ifCreateExternalLBPublicFrontendIP')]",
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2019-04-01",
            "name": "[variables('externalLBFrontendIPName')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "publicIPAllocationMethod": "Static",
                "dnsSettings": {
                    "domainNameLabel": "[parameters('UniqueResourceNamePrefix')]"
                }
            }
        },
        {
            "type": "Microsoft.Network/loadBalancers",
            "apiVersion": "2019-04-01",
            "name": "[variables('externalLoadBalancerName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": ["[variables('externalLBFrontendIPName')]"],
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "name": "[variables('externalLoadBalancerFrontendIPConfigName1')]",
                        "properties": {
                            "publicIPAddress": {
                                "id": "[variables('externalLBFrontendIPId')]"
                            }
                        }
                    }
                ],
                "backendAddressPools": "[variables('externalLBBackendAddressPools')]",
                "inboundNatPools": [
                    {
                        "name": "[variables('loadBalancerInboundNatPoolNameVMSSBYOLHTTPS')]",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[variables('externalLoadBalancerFrontendIPConfigId1')]"
                            },
                            "protocol": "Tcp",
                            "frontendPortRangeStart": "[variables('extLBInboundNATFrontendPortRangeVMSSBYOLHTTPS')[0]]",
                            "frontendPortRangeEnd": "[variables('extLBInboundNATFrontendPortRangeVMSSBYOLHTTPS')[1]]",
                            "backendPort": "[parameters('ExternalLBNATBackendPortHTTPS')]"
                        }
                    },
                    {
                        "name": "[variables('loadBalancerInboundNatPoolNameVMSSBYOLSSH')]",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[variables('externalLoadBalancerFrontendIPConfigId1')]"
                            },
                            "protocol": "Tcp",
                            "frontendPortRangeStart": "[variables('extLBInboundNATFrontendPortRangeVMSSBYOLSSH')[0]]",
                            "frontendPortRangeEnd": "[variables('extLBInboundNATFrontendPortRangeVMSSBYOLSSH')[1]]",
                            "backendPort": "[parameters('ExternalLBNATBackendPortSSH')]"
                        }
                    },
                    {
                        "name": "[variables('loadBalancerInboundNatPoolNameVMSSPAYGHTTPS')]",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[variables('externalLoadBalancerFrontendIPConfigId1')]"
                            },
                            "protocol": "Tcp",
                            "frontendPortRangeStart": "[variables('extLBInboundNATFrontendPortRangeVMSSPAYGHTTPS')[0]]",
                            "frontendPortRangeEnd": "[variables('extLBInboundNATFrontendPortRangeVMSSPAYGHTTPS')[1]]",
                            "backendPort": "[parameters('ExternalLBNATBackendPortHTTPS')]"
                        }
                    },
                    {
                        "name": "[variables('loadBalancerInboundNatPoolNameVMSSPAYGSSH')]",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[variables('externalLoadBalancerFrontendIPConfigId1')]"
                            },
                            "protocol": "Tcp",
                            "frontendPortRangeStart": "[variables('extLBInboundNATFrontendPortRangeVMSSPAYGSSH')[0]]",
                            "frontendPortRangeEnd": "[variables('extLBInboundNATFrontendPortRangeVMSSPAYGSSH')[1]]",
                            "backendPort": "[parameters('ExternalLBNATBackendPortSSH')]"
                        }
                    }
                ],
                "loadBalancingRules": "[variables('externalLBRules').iterations]",
                "probes": [
                    {
                        "name": "tcpProbe",
                        "properties": {
                            "protocol": "Tcp",
                            "port": 22,
                            "intervalInSeconds": 5,
                            "numberOfProbes": 3
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/loadBalancers",
            "apiVersion": "2019-04-01",
            "condition": "[variables('ifCreateInternalLB')]",
            "name": "[variables('internalLoadBalancerName')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "name": "[variables('internalLoadBalancerFrontendIPConfigName1')]",
                        "properties": {
                            "privateIPAddress": "[parameters('InternalLBFrontendIPAddress')]",
                            "privateIPAllocationMethod": "Static",
                            "Subnet": {
                                "id": "[parameters('InternalLBFrontendSubnetId')]"
                            }
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "[variables('internalLoadBalancerBackendIPPoolName1')]"
                    }
                ],
                "loadBalancingRules": [
                    {
                        "name": "[concat(variables('internalLoadBalancerName'), '-rule-all-0-0')]",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[variables('internalLoadBalancerFrontendIPConfigId1')]"
                            },
                            "backendAddressPool": {
                                "id": "[variables('internalLoadBalancerBackendIPPoolId1')]"
                            },
                            "protocol": "All",
                            "frontendPort": 0,
                            "backendPort": 0,
                            "loadDistribution": "SourceIP",
                            "enableFloatingIP": true,
                            "probe": {
                                "id": "[concat(variables('internalLoadBalancerId'), '/probes/tcpProbe')]"
                            }
                        }
                    }
                ],
                "probes": [
                    {
                        "name": "tcpProbe",
                        "properties": {
                            "protocol": "Tcp",
                            "port": 22,
                            "intervalInSeconds": 5,
                            "numberOfProbes": 3
                        }
                    }
                ]
            }
        }
    ],
    "outputs": {
        "cmdDeleteAll": {
            "type": "String",
            "value": "[variables('cmdDeleteAll')]"
        },
        "externalLBBackendAddressPoolIds": {
            "type": "Array",
            "value": "[variables('externalLBBackendAddressPoolIds').iterations]"
        },
        "externalLBFrontendIPId": {
            "type": "String",
            "value": "[variables('externalLBFrontendIPId')]"
        },
        "externalLBId": {
            "type": "String",
            "value": "[variables('externalLoadBalancerId')]"
        },
        "externalLBInboundNatPoolIds": {
            "type": "Array",
            "value": "[variables('externalLBInboundNatPoolIds')]"
        },
        "externalLBInboundNatPortRanges": {
            "type": "Array",
            "value": "[concat(variables('extLBInboundNATFrontendPortRangeVMSSPAYGHTTPS')[0], '-', variables('extLBInboundNATFrontendPortRangeVMSSPAYGHTTPS')[1], ',', variables('extLBInboundNATFrontendPortRangeVMSSPAYGSSH')[0], '-', variables('extLBInboundNATFrontendPortRangeVMSSPAYGSSH')[1], ',', variables('extLBInboundNATFrontendPortRangeVMSSBYOLHTTPS')[0], '-', variables('extLBInboundNATFrontendPortRangeVMSSBYOLHTTPS')[1], ',', variables('extLBInboundNATFrontendPortRangeVMSSBYOLSSH')[0], '-', variables('extLBInboundNATFrontendPortRangeVMSSBYOLSSH')[1])]"
        },
        "externalLBName": {
            "type": "String",
            "value": "[variables('externalLoadBalancerName')]"
        },
        "internalLBId": {
            "type": "String",
            "value": "[if(variables('ifCreateInternalLB'), variables('internalLoadBalancerId'), 'n/a')]"
        },
        "internalLBName": {
            "type": "String",
            "value": "[if(variables('ifCreateInternalLB'), variables('internalLoadBalancerName'), 'n/a')]"
        }
    }
}
