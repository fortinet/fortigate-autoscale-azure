{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "3.3.0.0",
    "parameters": {
        "NetworkSecurityGroupRulesSubnet1Inbound": {
            "type": "Array"
        },
        "NetworkSecurityGroupRulesSubnet1Outbound": {
            "type": "Array"
        },
        "NetworkSecurityGroupRulesExtraSubnetsInbound": {
            "type": "Array"
        },
        "NetworkSecurityGroupRulesExtraSubnetsOutbound": {
            "type": "Array"
        },
        "Subnet1AddressRange": {
            "type": "String"
        },
        "Subnet1Name": {
            "type": "String"
        },
        "VNetName": {
            "type": "String"
        }
    },
    "variables": {
        "voidNSGRules": [
            [
                "nsgName",
                "ruleName",
                "Allow or Deny",
                "* or single port for destinationAddressPrefix",
                ["80", "8080", "1000-1999", "array of ports for destinationAddressPrefixes"],
                "* or single port for destinationPortRanges",
                ["80", "8080", "1000-1999", "array of ports for destinationPortRanges"],
                "integer for priority starting from",
                "TCP, UDP, * for protocol",
                "* or single port for sourceAddressPrefix",
                ["80", "8080", "1000-1999", "array of ports for sourceAddressPrefixes"],
                "* or single port for sourcePortRange",
                ["80", "8080", "1000-1999", "array of ports for sourcePortRanges"]
            ]
        ],
        "ifCreateNSGRulesIn": "[if(equals(length(variables('nsgRulesInParam')), 0), false(), true())]",
        "ifCreateNSGRulesOut": "[if(equals(length(variables('nsgRulesOutParam')), 0), false(), true())]",
        "nsgRulesIn": "[if(variables('ifCreateNSGRulesIn'), variables('nsgRulesInParam'), variables('voidNSGRules'))]",
        "nsgRulesInParam": "[concat(parameters('NetworkSecurityGroupRulesSubnet1Inbound'), parameters('NetworkSecurityGroupRulesExtraSubnetsInbound'))]",
        "nsgRulesOut": "[if(variables('ifCreateNSGRulesOut'), variables('nsgRulesOutParam'), variables('voidNSGRules'))]",
        "nsgRulesOutParam": "[concat(parameters('NetworkSecurityGroupRulesSubnet1Outbound'), parameters('NetworkSecurityGroupRulesExtraSubnetsOutbound'))]"
    },
    "resources": [
        {
            "apiVersion": "2020-11-01",
            "location": "[resourceGroup().location]",
            "name": "[concat(parameters('VNetName'), '/', parameters('Subnet1Name'))]",
            "properties": {
                "addressPrefix": "[parameters('Subnet1AddressRange')]",
                "serviceEndpoints": [
                    {
                        "service": "Microsoft.AzureCosmosDB",
                        "locations": ["*"]
                    },
                    {
                        "service": "Microsoft.Web",
                        "locations": ["*"]
                    }
                ]
            },
            "type": "Microsoft.Network/virtualNetworks/subnets"
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2020-05-01",
            "condition": "[variables('ifCreateNSGRulesIn')]",
            "name": "[concat(variables('nsgRulesIn')[copyIndex()][0], '/', if(variables('ifCreateNSGRulesIn'), variables('nsgRulesIn')[copyIndex()][1], concat('inbound-rule', copyIndex())))]",
            "copy": {
                "name": "nsgRule",
                "count": "[length(variables('nsgRulesIn'))]"
            },
            "properties": {
                "access": "[variables('nsgRulesIn')[copyIndex()][2]]",
                "destinationAddressPrefix": "[variables('nsgRulesIn')[copyIndex()][3]]",
                "destinationAddressPrefixes": "[variables('nsgRulesIn')[copyIndex()][4]]",
                "destinationPortRange": "[variables('nsgRulesIn')[copyIndex()][5]]",
                "destinationPortRanges": "[variables('nsgRulesIn')[copyIndex()][6]]",
                "direction": "Inbound",
                "priority": "[add(int(variables('nsgRulesIn')[copyIndex()][7]), copyIndex())]",
                "protocol": "[variables('nsgRulesIn')[copyIndex()][8]]",
                "sourceAddressPrefix": "[variables('nsgRulesIn')[copyIndex()][9]]",
                "sourceAddressPrefixes": "[variables('nsgRulesIn')[copyIndex()][10]]",
                "sourcePortRange": "[variables('nsgRulesIn')[copyIndex()][11]]",
                "sourcePortRanges": "[variables('nsgRulesIn')[copyIndex()][12]]"
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2020-05-01",
            "condition": "[variables('ifCreateNSGRulesOut')]",
            "name": "[concat(variables('nsgRulesOut')[copyIndex()][0], '/', if(variables('ifCreateNSGRulesOut'), variables('nsgRulesOut')[copyIndex()][1], concat('outbound-rule', copyIndex())))]",
            "copy": {
                "name": "nsgRule",
                "count": "[length(variables('nsgRulesOut'))]"
            },
            "properties": {
                "access": "[variables('nsgRulesOut')[copyIndex()][2]]",
                "destinationAddressPrefix": "[variables('nsgRulesOut')[copyIndex()][3]]",
                "destinationAddressPrefixes": "[variables('nsgRulesOut')[copyIndex()][4]]",
                "destinationPortRange": "[variables('nsgRulesOut')[copyIndex()][5]]",
                "destinationPortRanges": "[variables('nsgRulesOut')[copyIndex()][6]]",
                "direction": "Outbound",
                "priority": "[add(int(variables('nsgRulesOut')[copyIndex()][7]), copyIndex())]",
                "protocol": "[variables('nsgRulesOut')[copyIndex()][8]]",
                "sourceAddressPrefix": "[variables('nsgRulesOut')[copyIndex()][9]]",
                "sourceAddressPrefixes": "[variables('nsgRulesOut')[copyIndex()][10]]",
                "sourcePortRange": "[variables('nsgRulesOut')[copyIndex()][11]]",
                "sourcePortRanges": "[variables('nsgRulesOut')[copyIndex()][12]]"
            }
        }
    ],
    "outputs": {}
}
