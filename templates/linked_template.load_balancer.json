{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "3.3.0.0",
    "parameters": {
        "UniqueResourceNamePrefix": {
            "type": "String"
        },
        "ExternalLBFrontendIPId": {
            "type": "String"
        },
        "ExternalLBInboundSSHPortRange": {
            "type": "Array"
        },
        "ExternalLBInboundHTTPSPortRange": {
            "type": "Array"
        },
        "ExternalLBRules": {
            "type": "Array"
        },
        "InternalLBFrontendIPAddress": {
            "type": "String"
        },
        "InternalLBFrontendSubnetId": {
            "type": "String"
        }
    },
    "variables": {
        "ifCreateInternalLB": "[and(parameters('InternalLBFrontendIPAddress'), parameters('InternalLBFrontendSubnetId'))]",
        "ifCreateExternalLBPublicFrontendIP": "[empty(parameters('ExternalLBFrontendIPId'))]",
        "externalLBFrontendIPName": "[concat(parameters('UniqueResourceNamePrefix'), '-ext-lb-public-ip')]",
        "externalLBFrontendIPId": "[if(variables('ifCreateExternalLBPublicFrontendIP'), concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/publicIPAddresses/', variables('externalLBFrontendIPName')), parameters('ExternalLBFrontendIPId'))]",
        "externalLBInboundSSHPortRange": "[if(empty(parameters('ExternalLBInboundSSHPortRange')), createArray(29001, 39000), if(equals(length(parameters('ExternalLBInboundSSHPortRange')), 1), createArray(int(parameters('ExternalLBInboundSSHPortRange')[0]), int(parameters('ExternalLBInboundSSHPortRange')[0])), createArray(int(parameters('ExternalLBInboundSSHPortRange')[0]), int(parameters('ExternalLBInboundSSHPortRange')[1]))))]",
        "externalLBInboundSSHPortStart": "[min(variables('externalLBInboundSSHPortRange')[0], variables('externalLBInboundSSHPortRange')[1])]",
        "externalLBInboundSSHPortEnd": "[max(variables('externalLBInboundSSHPortRange')[0], variables('externalLBInboundSSHPortRange')[1])]",
        "externalLBInboundHTTPSPortRange": "[if(empty(parameters('ExternalLBInboundHTTPSPortRange')), createArray(39001, 49000), if(equals(length(parameters('ExternalLBInboundHTTPSPortRange')), 1), createArray(int(parameters('ExternalLBInboundHTTPSPortRange')[0]), int(parameters('ExternalLBInboundHTTPSPortRange')[0])), createArray(int(parameters('ExternalLBInboundHTTPSPortRange')[0]), int(parameters('ExternalLBInboundHTTPSPortRange')[1]))))]",
        "externalLBInboundHTTPSPortStart": "[min(variables('externalLBInboundHTTPSPortRange')[0], variables('externalLBInboundHTTPSPortRange')[1])]",
        "externalLBInboundHTTPSPortEnd": "[max(variables('externalLBInboundHTTPSPortRange')[0], variables('externalLBInboundHTTPSPortRange')[1])]",
        "externalLoadBalancerName": "[concat(parameters('UniqueResourceNamePrefix'), '-external-load-balancer')]",
        "externalLoadBalancerId": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/loadBalancers/', variables('externalLoadBalancerName'))]",
        "externalLoadBalancerFrontendIPConfigName1": "[concat(variables('externalLoadBalancerName'), '-frontend-ip-config1')]",
        "externalLoadBalancerFrontendIPConfigId1": "[concat(variables('externalLoadBalancerId'), '/frontendIPConfigurations/', variables('externalLoadBalancerFrontendIPConfigName1'))]",
        "externalLoadBalancerBackendAddressPoolName1": "[concat(variables('externalLoadBalancerName'), '-backend-ip-pool-subnet1')]",
        "externalLoadBalancerBackendAddressPoolId1": "[concat(variables('externalLoadBalancerId'), '/backendAddressPools/',variables('externalLoadBalancerBackendAddressPoolName1'))]",
        "internalLoadBalancerName": "[concat(parameters('UniqueResourceNamePrefix'), '-internal-load-balancer')]",
        "internalLoadBalancerId": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/loadBalancers/', variables('internalLoadBalancerName'))]",
        "internalLoadBalancerFrontendIPConfigName1": "[concat(variables('internalLoadBalancerName'), '-frontend-ip-config1')]",
        "internalLoadBalancerFrontendIPConfigId1": "[concat(variables('internalLoadBalancerId'), '/frontendIPConfigurations/', variables('internalLoadBalancerFrontendIPConfigName1'))]",
        "internalLoadBalancerBackendIPPoolName1": "[concat(variables('internalLoadBalancerName'), '-backend-ip-pool1')]",
        "internalLoadBalancerBackendIPPoolId1": "[concat(variables('internalLoadBalancerId'), '/backendAddressPools/',variables('internalLoadBalancerBackendIPPoolName1'))]",
        "externalLBBackendAddressPools": [
            {
                "name": "[variables('externalLoadBalancerBackendAddressPoolName1')]"
            }
        ],
        "externalLBInboundNatPoolIds": [
            {
                "id": "[resourceId(subscription().subscriptionId, resourceGroup().name, 'Microsoft.Network/loadBalancers/inboundNatPools', variables('externalLoadBalancerName'), variables('externalLBInboundNATPoolHTTPSName'))]"
            },
            {
                "id": "[resourceId(subscription().subscriptionId, resourceGroup().name, 'Microsoft.Network/loadBalancers/inboundNatPools', variables('externalLoadBalancerName'), variables('externalLBInboundNATPoolSSHName'))]"
            }
        ],
        "externalLBBackendAddressPoolIds": {
            "copy": [
                {
                    "name": "iterations",
                    "count": "[length(variables('externalLBBackendAddressPools'))]",
                    "input": {
                        "id": "[concat(variables('externalLoadBalancerId'), '/backendAddressPools/',variables('externalLBBackendAddressPools')[copyIndex('iterations')])]"
                    }
                }
            ]
        },
        "externalLBRules": {
            "copy": [
                {
                    "name": "iterations",
                    "count": "[length(parameters('ExternalLBRules'))]",
                    "input": {
                        "name": "[concat(variables('externalLoadBalancerName'), '-rule-', parameters('ExternalLBRules')[copyIndex('iterations')][0], '-', parameters('ExternalLBRules')[copyIndex('iterations')][1], '-', parameters('ExternalLBRules')[copyIndex('iterations')][2])]",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[variables('externalLoadBalancerFrontendIPConfigId1')]"
                            },
                            "backendAddressPool": "[variables('externalLBBackendAddressPoolIds').iterations[0]]",
                            "protocol": "[parameters('ExternalLBRules')[copyIndex('iterations')][0]]",
                            "frontendPort": "[int(parameters('ExternalLBRules')[copyIndex('iterations')][1])]",
                            "backendPort": "[int(parameters('ExternalLBRules')[copyIndex('iterations')][2])]",
                            "loadDistribution": "SourceIP",
                            "enableFloatingIP": true,
                            "probe": {
                                "id": "[concat(variables('externalLoadBalancerId'), '/probes/tcpProbe')]"
                            }
                        }
                    }
                }
            ]
        },
        "externalLBInboundNATPoolHTTPSName": "[concat(variables('externalLoadBalancerName'), '-inbound-nat-pool-https')]",
        "externalLBInboundNATPoolSSHName": "[concat(variables('externalLoadBalancerName'), '-inbound-nat-pool-ssh')]"
    },
    "resources": [
        {
            "condition": "[variables('ifCreateExternalLBPublicFrontendIP')]",
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2019-04-01",
            "name": "[variables('externalLBFrontendIPName')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "publicIPAllocationMethod": "Static",
                "dnsSettings": {
                    "domainNameLabel": "[parameters('UniqueResourceNamePrefix')]"
                }
            }
        },
        {
            "type": "Microsoft.Network/loadBalancers",
            "apiVersion": "2019-04-01",
            "name": "[variables('externalLoadBalancerName')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "name": "[variables('externalLoadBalancerFrontendIPConfigName1')]",
                        "properties": {
                            "publicIPAddress": {
                                "id": "[variables('externalLBFrontendIPId')]"
                            }
                        }
                    }
                ],
                "backendAddressPools": "[variables('externalLBBackendAddressPools')]",
                "inboundNatPools": [
                    {
                        "name": "[variables('externalLBInboundNATPoolHTTPSName')]",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[variables('externalLoadBalancerFrontendIPConfigId1')]"
                            },
                            "protocol": "Tcp",
                            "frontendPortRangeStart": "[variables('externalLBInboundHTTPSPortStart')]",
                            "frontendPortRangeEnd": "[variables('externalLBInboundHTTPSPortEnd')]",
                            "backendPort": 8443
                        }
                    },
                    {
                        "name": "[variables('externalLBInboundNATPoolSSHName')]",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[variables('externalLoadBalancerFrontendIPConfigId1')]"
                            },
                            "protocol": "Tcp",
                            "frontendPortRangeStart": "[variables('externalLBInboundSSHPortStart')]",
                            "frontendPortRangeEnd": "[variables('externalLBInboundSSHPortEnd')]",
                            "backendPort": 22
                        }
                    }
                ],
                "loadBalancingRules": "[variables('externalLBRules').iterations]",
                "probes": [
                    {
                        "name": "tcpProbe",
                        "properties": {
                            "protocol": "Tcp",
                            "port": 22,
                            "intervalInSeconds": 5,
                            "numberOfProbes": 3
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/loadBalancers",
            "apiVersion": "2019-04-01",
            "condition": "[variables('ifCreateInternalLB')]",
            "name": "[variables('internalLoadBalancerName')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "name": "[variables('internalLoadBalancerFrontendIPConfigName1')]",
                        "properties": {
                            "privateIPAddress": "[parameters('InternalLBFrontendIPAddress')]",
                            "privateIPAllocationMethod": "Static",
                            "Subnet": {
                                "id": "[parameters('InternalLBFrontendSubnetId')]"
                            }
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "[variables('internalLoadBalancerBackendIPPoolName1')]"
                    }
                ],
                "loadBalancingRules": [
                    {
                        "name": "[concat(variables('internalLoadBalancerName'), '-rule-all-0-0')]",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[variables('internalLoadBalancerFrontendIPConfigId1')]"
                            },
                            "backendAddressPool": {
                                "id": "[variables('internalLoadBalancerBackendIPPoolId1')]"
                            },
                            "protocol": "All",
                            "frontendPort": 0,
                            "backendPort": 0,
                            "loadDistribution": "SourceIP",
                            "enableFloatingIP": true,
                            "probe": {
                                "id": "[concat(variables('internalLoadBalancerId'), '/probes/tcpProbe')]"
                            }
                        }
                    }
                ],
                "probes": [
                    {
                        "name": "tcpProbe",
                        "properties": {
                            "protocol": "Tcp",
                            "port": 22,
                            "intervalInSeconds": 5,
                            "numberOfProbes": 3
                        }
                    }
                ]
            }
        }
    ],
    "outputs": {
        "externalLBName": {
            "type": "String",
            "value": "[variables('externalLoadBalancerName')]"
        },
        "externalLBId": {
            "type": "String",
            "value": "[variables('externalLoadBalancerId')]"
        },
        "internalLBName": {
            "type": "String",
            "value": "[if(variables('ifCreateInternalLB'), variables('internalLoadBalancerName'), 'n/a')]"
        },
        "internalLBId": {
            "type": "String",
            "value": "[if(variables('ifCreateInternalLB'), variables('internalLoadBalancerId'), 'n/a')]"
        },
        "externalLBInboundNatPoolIds": {
            "type": "Array",
            "value": "[variables('externalLBInboundNatPoolIds')]"
        },
        "externalLBBackendAddressPoolIds": {
            "type": "Array",
            "value": "[variables('externalLBBackendAddressPoolIds').iterations]"
        }
    }
}
