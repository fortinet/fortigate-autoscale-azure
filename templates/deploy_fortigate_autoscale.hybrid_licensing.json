{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "3.6.0.0",
    "parameters": {
        "AccessRestrictionIPRange": {
            "type": "String",
            "metadata": {
                "description": "Specify IP ranges (single IPv4 address or CIDR range) to allow access from the Internet or from your on-premises network to the CosmosDB and Function App. Specify at least one entry for security purposes. For multiple entries, each entry must be separated by a comma and no trailing comma is allowed. **WARNING!** 0.0.0.0/0 accepts connections from any IP address. We recommend that you use a constrained CIDR range to reduce the potential of inbound attacks from unknown IP addresses."
            }
        },
        "AdminPassword": {
            "type": "SecureString",
            "metadata": {
                "description": "FortiGate administrator password on all VMs as well as the FortiAnalyzer if FortiAnalyzer integration is enabled. FortiGate and Azure VM password policy must be followed and the password must be11 - 26 characters in length with at least one uppercase letter, one lowercase letter, one digit, and one special character such as @ # $ % ^ & * - _ ! + =."
            }
        },
        "AdminUsername": {
            "defaultValue": "azureadmin",
            "type": "String",
            "metadata": {
                "description": "FortiGate administrator username on all VMs as well as the FortiAnalyzer if FortiAnalyzer integration is enabled."
            }
        },
        "BYOLInstanceCount": {
            "defaultValue": 2,
            "minValue": 0,
            "type": "Int",
            "metadata": {
                "description": "Number of FortiGate instances the BYOL VMSS should have at any time. For High Availability in BYOL-only and Hybrid use cases, ensure at least 2 FortiGates are in the group. For specific use cases, set to 0 for PAYG-only, and >= 2 for BYOL-only or hybrid licensing."
            }
        },
        "FortiAnalyzerAutoscaleAdminPassword": {
            "defaultValue": "",
            "type": "securestring",
            "metadata": {
                "description": "Password for the 'FortiAnalyzer Autoscale Admin Username'. The password must conform to the FortiAnalyzer password policy and have a minimum length of 8 and a maximum length of 128. If you need to enable KMS encryption, refer to the documentation."
            }
        },
        "FortiAnalyzerAutoscaleAdminUsername": {
            "defaultValue": "azureadmin",
            "type": "string",
            "metadata": {
                "description": "Name of the secondary administrator-level account in the FortiAnalyzer. FortiGate Autoscale uses this account to connect to the FortiAnalyzer to authorize any FortiGate device in the Auto Scaling group. To conform to the FortiAnalyzer naming policy, the user name can only contain numbers, lowercase letters, uppercase letters, and hyphens. It cannot start or end with a hyphen (-)."
            }
        },
        "FortiAnalyzerCustomPrivateIPAddress": {
            "defaultValue": "",
            "type": "string",
            "metadata": {
                "description": "Custom private IP address to be used by the FortiAnalyzer. Must be within the public subnet 1 CIDR range. Required if 'FortiAnalyzer Integration Options' is set to 'yes'. If 'FortiAnalyzer Integration Options' is set to 'no', any input will be ignored."
            }
        },
        "FortiAnalyzerInstanceType": {
            "type": "string",
            "defaultValue": "Standard_D2s_v3",
            "allowedValues": [
                "Standard_D2_v2",
                "Standard_D3_v2",
                "Standard_D4_v2",
                "Standard_D5_v2",
                "Standard_DS2_v2",
                "Standard_DS3_v2",
                "Standard_DS4_v2",
                "Standard_DS5_v2",
                "Standard_D2_v3",
                "Standard_D4_v3",
                "Standard_D8_v3",
                "Standard_D16_v3",
                "Standard_D2s_v3",
                "Standard_D4s_v3",
                "Standard_D8s_v3",
                "Standard_D16s_v3",
                "Standard_D2a_v4",
                "Standard_D4a_v4",
                "Standard_D8a_v4",
                "Standard_D16a_v4",
                "Standard_D2as_v4",
                "Standard_D4as_v4",
                "Standard_D8as_v4",
                "Standard_D16as_v4"
            ],
            "metadata": {
                "description": "Size of the FortiAnalyzer-VM. Not all instance types are supported. Review the documentation prior to selecting an instance."
            }
        },
        "FortiAnalyzerIntegrationOptions": {
            "defaultValue": "no",
            "allowedValues": [ "yes", "no" ],
            "type": "String",
            "metadata": {
                "description": "Choose 'yes' to incorporate FortiAnalyzer into FortiGate Autoscale for Azure to use extended features that include storing logs into FortiAnalyzer."
            }
        },
        "FortiAnalyzerPublicIPAddressID": {
            "defaultValue": "",
            "type": "String",
            "metadata": {
                "description": "ID of the public IP address to associate with the FortiAnalyzer. If left empty, a new public IP address will be allocated in the resource group that contains the FortiAnalyzer."
            }
        },
        "FortiAnalyzerVersion": {
            "defaultValue": "7.4.2",
            "allowedValues": [ "7.2.5", "7.4.2" ],
            "type": "String",
            "metadata": {
                "description": "FortiAnalyzer version supported by FortiGate Autoscale for Azure."
            }
        },
        "FortiGatePSKSecret": {
            "type": "SecureString",
            "metadata": {
                "description": "Secret key used by FortiGate instances to securely communicate with each other. Must contain numbers and letters and may contain special characters. Maximum length is 128."
            }
        },
        "FOSVersion": {
            "defaultValue": "7.4.4",
            "allowedValues": [ "7.2.8", "7.4.4", "latest" ],
            "type": "String",
            "metadata": {
                "description": "FortiOS version supported by FortiGate Autoscale for Azure."
            }
        },
        "FrontendIPAddressID": {
            "defaultValue": "",
            "type": "String",
            "metadata": {
                "description": "When the ID of a Public IP Address is provided, the Public IP Address will be used as the Frontend IP address associated with the external load balancer. If left empty, a new Public IP Address will be allocated in the resource group that contains the virtual network components."
            }
        },
        "HeartBeatDelayAllowance": {
            "defaultValue": 30,
            "minValue": 30,
            "type": "Int",
            "metadata": {
                "description": "Maximum amount of time (in seconds) allowed for network latency of the FortiGate heartbeat arriving at the Autoscale handler function. Minimum is 30."
            }
        },
        "HeartBeatInterval": {
            "defaultValue": 60,
            "minValue": 30,
            "maxValue": 120,
            "type": "Int",
            "metadata": {
                "description": "Length of time (in seconds) that the FortiGate waits between sending heartbeat requests to the Autoscale handler function. Minimum is 30. Maximum is 120."
            }
        },
        "HeartBeatLossCount": {
            "defaultValue": 10,
            "minValue": 3,
            "type": "Int",
            "metadata": {
                "description": "Number of consecutively lost heartbeats. When the Heart Beat Loss Count has been reached, the VM is deemed unhealthy and failover activities will commence."
            }
        },
        "InstanceType": {
            "defaultValue": "Standard_F4s",
            "type": "String",
            "allowedValues": [
                "Standard_F4s",
                "Standard_F8s",
                "Standard_F16s",
                "Standard_F4",
                "Standard_F8",
                "Standard_F16",
                "Standard_F8s_v2",
                "Standard_F16s_v2",
                "Standard_F32s_v2",
                "Standard_DS3_v2",
                "Standard_DS4_v2",
                "Standard_DS5_v2",
                "Standard_D8s_v3",
                "Standard_D16s_v3",
                "Standard_D32s_v3",
                "Standard_D8_v4",
                "Standard_D16_v4",
                "Standard_D32_v4",
                "Standard_D8s_v4",
                "Standard_D16s_v4",
                "Standard_D32s_v4",
                "Standard_D8a_v4",
                "Standard_D16a_v4",
                "Standard_D32a_v4",
                "Standard_D8as_v4",
                "Standard_D16as_v4",
                "Standard_D32as_v4",
                "Standard_D8_v5",
                "Standard_D16_v5",
                "Standard_D32_v5",
                "Standard_D8s_v5",
                "Standard_D16s_v5",
                "Standard_D32s_v5",
                "Standard_D8as_v5",
                "Standard_D16as_v5",
                "Standard_D32as_v5",
                "Standard_D8ads_v5",
                "Standard_D16ads_v5",
                "Standard_D32ads_v5"
            ],
            "metadata": {
                "description": "Size of the VMs in the VMSS. The default is Standard_F4. More options can be found at https://docs.microsoft.com/en-us/azure/virtual-machines/sizes."
            }
        },
        "MaxBYOLInstanceCount": {
            "defaultValue": 2,
            "minValue": 0,
            "type": "Int",
            "metadata": {
                "description": "Maximum number of FortiGate instances in the BYOL VMSS. For specific use cases, set to 0 for PAYG-only, and >= 2 for BYOL-only or hybrid licensing. This number must be greater than or equal to the 'Min BYOL Instance Count'."
            }
        },
        "MaxPAYGInstanceCount": {
            "defaultValue": 6,
            "minValue": 0,
            "type": "Int",
            "metadata": {
                "description": "Maximum number of FortiGate instances in the PAYG VMSS. For specific use cases, set to 0 for BYOL-only, >= 2 for PAYG-only, and >= 0 for hybrid licensing. This number must be greater than or equal to the 'Min PAYG Instance Count'."
            }
        },
        "MinBYOLInstanceCount": {
            "defaultValue": 2,
            "minValue": 0,
            "type": "Int",
            "metadata": {
                "description": "Minimum number of FortiGate instances in the BYOL VMSS. For specific use cases, set to 0 for PAYG-only, and >= 2 for BYOL-only or hybrid licensing."
            }
        },
        "MinPAYGInstanceCount": {
            "defaultValue": 0,
            "minValue": 0,
            "type": "Int",
            "metadata": {
                "description": "Minimum number of FortiGate instances in the PAYG VMSS. For specific use cases, set to 0 for BYOL-only, >= 2 for PAYG-only, and >= 0 for hybrid licensing."
            }
        },
        "PAYGInstanceCount": {
            "defaultValue": 0,
            "minValue": 0,
            "type": "Int",
            "metadata": {
                "description": "Number of FortiGate instances the PAYG VMSS should have at any time. For High Availability in a PAYG-only use case, ensure at least 2 FortiGates are in the group. For specific use cases, set to 0 for BYOL-only, >= 2 for PAYG-only, and >= 0 for hybrid licensing."
            }
        },
        "PackageResURL": {
            "type": "String",
            "defaultValue": "https://github.com/fortinet/fortigate-autoscale-azure/releases/download/3.6.0/fortigate-autoscale-azure-funcapp.zip",
            "metadata": {
                "description": "Public URL of the Autoscale Function App source file fortigate-autoscale-azure-funcapp.zip. This URL must be accessible by Azure. The default value points to the source file available in the release assets of the GitHub repo fortinet/fortigate-autoscale-azure."
            }
        },
        "PrimaryElectionTimeout": {
            "defaultValue": 600,
            "type": "Int",
            "metadata": {
                "description": "Maximum time (in seconds) to wait for the election of the primary instance to complete."
            }
        },
        "ResourceNamePrefix": {
            "maxLength": 10,
            "type": "String",
            "metadata": {
                "description": "Prefix for all applicable resource names. Can only contain lowercase letters and numbers. Maximum length is 10."
            }
        },
        "ScaleInThreshold": {
            "defaultValue": 20,
            "type": "Int",
            "metadata": {
                "description": "Percentage of CPU utilization at which scale-in should occur."
            }
        },
        "ScaleOutThreshold": {
            "defaultValue": 80,
            "type": "Int",
            "metadata": {
                "description": "Percentage of CPU utilization at which scale-out should occur."
            }
        },
        "ServicePlanTier": {
            "defaultValue": "Premium (P1V2)",
            "allowedValues": [ "Premium (P1V2)", "Free (for demo only)" ],
            "type": "String",
            "metadata": {
                "description": "Pricing tier for the function service plan. Note: The Free plan is for trial and demo use only. Do not use it in a production environment."
            }
        },
        "ServicePrincipalAppID": {
            "type": "securestring",
            "metadata": {
                "description": "Application ID for the Registered app used as the Autoscale Function App API request service principal. This is under Azure Active Directory > App registrations > {your app}."
            }
        },
        "ServicePrincipalAppSecret": {
            "type": "securestring",
            "metadata": {
                "description": "Password (Authentication key) for the Registered app used as the Autoscale Function App API request service principal."
            }
        },
        "ServicePrincipalObjectID": {
            "type": "securestring",
            "metadata": {
                "description": "Object ID for the Registered app used as Autoscale Function App API request service principal. This is under Azure Active Directory > App registrations > {your app}."
            }
        },
        "StorageAccountType": {
            "defaultValue": "Standard_LRS",
            "allowedValues": [ "Standard_LRS", "Standard_GRS", "Standard_RAGRS" ],
            "type": "String",
            "metadata": {
                "description": "Storage account type."
            }
        },
        "Subnet1AddressRange": {
            "type": "String",
            "metadata": {
                "description": "Defines the subnet 1 address range in CIDR notation. When creating a new VNet, the address range must be contained by the address space of the virtual network as defined in 'VNet Address Space'. When using an existing VNet, the input value must match the address range of the subnet specified in 'Subnet 1 Name'. After deployment, the address range of a subnet which is in use can't be edited."
            }
        },
        "Subnet1Name": {
            "defaultValue": "",
            "type": "String",
            "metadata": {
                "description": "Name of subnet 1. The FortiGate Autoscale VMSS is deployed in this subnet. When creating a new VNet, the input value is used as the Subnet 1 name. If left empty, a default name will be used. Required when using an existing VNet."
            }
        },
        "Subnet1NetworkSecurityGroupName": {
            "defaultValue": "",
            "type": "String",
            "metadata": {
                "description": "Name of network security group (NSG) associated with subnet 1. The FortiGate Autoscale VMSS is deployed in this subnet. Required when using an existing VNet. When creating a new VNet, any input value will be ignored."
            }
        },
        "Subnet1NetworkSecurityGroupRulePriority": {
            "defaultValue": 1000,
            "minValue": 100,
            "maxValue": 4096,
            "type": "Int",
            "metadata": {
                "description": "Starting number for the rule priority of the network security group (NSG) associated with subnet 1 where the Autoscale related rules will be deployed. The FortiGate Autoscale VMSS is deployed in subnet 1. When using an existing VNet, assign a number that does not conflict with the priority of any existing rule in the NSG specified in the 'Subnet 1 Network Security Group Name'."
            }
        },
        "Subnet2AddressRange": {
            "defaultValue": "",
            "type": "String",
            "metadata": {
                "description": "Defines the subnet 2 address range in CIDR notation. When creating a new VNet, a valid non-empty input will assume the creation of subnet 2. When using an existing VNet, a valid non-empty input is required if the 'Subnet 2 Name' parameter is provided. The value should match the address range of the target subnet. This address range must be contained by the address space of the virtual network defined in 'VNet Address Space'. After deployment, the address range of a subnet which is in use can't be edited."
            }
        },
        "Subnet2Name": {
            "defaultValue": "",
            "type": "String",
            "metadata": {
                "description": "Name of subnet 2. If created, the FortiGate will have a network interface in this subnet. When creating a new VNet that contains 'Subnet 2', the input value is used as the Subnet 2 name. If left empty, a default name will be used. When using an existing VNet, a valid non-empty input will assume the association of the target subnet with the Autoscale, and the target subnet will be associated as 'Subnet 2'; an empty value will assume Autoscale will deploy without using 'Subnet 2'."
            }
        },
        "Subnet3AddressRange": {
            "defaultValue": "",
            "type": "String",
            "metadata": {
                "description": "Defines the subnet 3 address range in CIDR notation. When creating a new VNet, a valid non-empty input will assume the creation of subnet 3. When using an existing VNet, a valid non-empty input is required if the 'Subnet 3 Name' parameter is provided. The value should match the address range of the target subnet. This address range must be contained by the address space of the virtual network as defined in 'VNet Address Space'. After deployment, the address range of a subnet which is in use can't be edited."
            }
        },
        "Subnet3Name": {
            "defaultValue": "",
            "type": "String",
            "metadata": {
                "description": "Name of subnet 3. If created, the FortiGate will have a network interface in this subnet. When creating a new VNet that contains 'Subnet 3', the input value is used as the Subnet 3 name. If left empty, a default name will be used. When using an existing VNet, a valid non-empty input will assume the association of the target subnet with the Autoscale, and the target subnet will be associated as 'Subnet 3'; an empty value will assume Autoscale will deploy without using 'Subnet 3'."
            }
        },
        "Subnet4AddressRange": {
            "defaultValue": "",
            "type": "String",
            "metadata": {
                "description": "Defines the subnet 4 address range in CIDR notation. When creating a new VNet, a valid non-empty input will assume the creation of subnet 4. When using an existing VNet, a valid non-empty input is required if the 'Subnet 4 Name' parameter is provided. The value should match the address range of the target subnet. This address range must be contained by the address space of the virtual network as defined in 'VNet Address Space'. After deployment, the address range of a subnet which is in use can't be edited."
            }
        },
        "Subnet4Name": {
            "defaultValue": "",
            "type": "String",
            "metadata": {
                "description": "Name of subnet 4. If created, the FortiGate will have a network interface in this subnet. When creating a new VNet that contains 'Subnet 4', the input value is used as the Subnet 4 name. If left empty, a default name will be used. When using an existing VNet, a valid non-empty input will assume the association of the target subnet with the Autoscale, and the target subnet will be associated as 'Subnet 4'; an empty value will assume Autoscale will deploy without using 'Subnet 4'."
            }
        },
        "TerminateUnhealthyVM": {
            "defaultValue": "no",
            "allowedValues": [ "no", "yes" ],
            "type": "String",
            "metadata": {
                "description": "Set to 'yes' to have the Azure Function code (FortiGate Autoscale) determine the health of the VM and delete unhealthy VMs. The default value is 'no' and is the recommended value."
            }
        },
        "SyncRecoveryCount": {
            "defaultValue": 3,
            "minValue": 3,
            "type": "Int",
            "metadata": {
                "description": "Number of consecutive on-time heartbeats required for the VM to recover from an unhealthy state. This parameters is only used when 'Terminate Unhealthy VM' is set to ‘no’."
            }
        },
        "VMSSAvailabilityZones": {
            "defaultValue": [],
            "type": "Array",
            "metadata": {
                "description": "Availability zones to use 'strict zone balancing', in array format. For example: [1], [1, 3], [1, 2, 3]. To use 'best-effort' zone balancing, leave empty. If zone balancing is not applicable, set to a single zone - for example, [2]. The template does not validate the input availability zone(s) against the region. Please find the correct number of availability zones for your region from https://docs.microsoft.com/en-us/azure/availability-zones/az-region. For zone balancing, please refer to https://docs.microsoft.com/en-us/azure/virtual-machine-scale-sets/virtual-machine-scale-sets-use-availability-zones#zone-balancing."
            }
        },
        "VMSSPlacementGroups": {
            "allowedValues": [ "single", "multiple" ],
            "defaultValue": "single",
            "type": "String",
            "metadata": {
                "description": "VMSS placement group options. For more information, please refer to: https://docs.microsoft.com/en-us/azure/virtual-machine-scale-sets/virtual-machine-scale-sets-use-availability-zones#placement-groups"
            }
        },
        "VnetAddressSpace": {
            "type": "String",
            "metadata": {
                "description": "IP address space of the VNet in CIDR notation. For example, 10.0.0.0/16. Required when using an existing VNet; the value should match the address space of the target VNet."
            }
        },
        "VnetDeploymentMethod": {
            "defaultValue": "create new",
            "allowedValues": [ "create new", "use existing" ],
            "type": "String",
            "metadata": {
                "description": "Options for Virtual Network (VNet) deployment. Note: The VNet resource group (specified in the 'VNet Resource Group Name' parameter) must be in the same region as the Autoscale resource group (specified in the 'Resource group' parameter). For requirements when using an existing VNet, refer to the documentation."
            }
        },
        "VnetName": {
            "defaultValue": "",
            "type": "String",
            "metadata": {
                "description": "Name of the Azure VNet to connect to FortiGate Autoscale. Required when using an existing VNet. When creating a new VNet, if this parameter is empty a name will be generated."
            }
        },
        "VnetResourceGroupName": {
            "defaultValue": "",
            "type": "String",
            "metadata": {
                "description": "Name of the resource group that contains the VNet and related network components. Required if the VNet is not in the Autoscale resource group (specified in the parameter 'Resource group'). If not specified, the Autoscale resource group will be used. For details refer to the description for the parameter 'VNet Deployment Method'. This resource group must be in the same region as the Autoscale resource group."
            }
        }
    },
    "variables": {
        "adminPortNumberHTTPS": 8443,
        "adminPortNumberSSH": 22,
        "autoscaleAssetContainerName": "fortigate-autoscale",
        "cmdDeleteDatabaseAccount": "[concat('az cosmosdb delete -y -g ', resourceGroup().name, ' -n ', variables('databaseAccountName'), ';')]",
        "cmdDeleteKeyVault": "[concat('az keyvault delete -g ', resourceGroup().name,' -n ', variables('keyVaultName'), ';')]",
        "cmdDeleteStorageAccount": "[concat('az storage account delete -y -g ', resourceGroup().name, ' -n ', variables('storageAccountName'), ';')]",
        "databaseAccountName": "[concat(toLower(variables('uniqueResourceNamePrefix')),'-dba001')]",
        "databaseName": "FortiGateAutoscale",
        "databaseSharedThroughput": "[add(add(variables('databaseSharedThroughputBase'), if(variables('enableHybridLicensing'), 200, 0)), if(variables('enableFortiAnalyzer'), 100, 0))]",
        "databaseSharedThroughputBase": 500,
        "enableFortiAnalyzer": "[equals(parameters('FortiAnalyzerIntegrationOptions'), 'yes')]",
        "enableHybridLicensing": true,
        "functionAppName": "[concat(variables('uniqueResourceNamePrefix'),'-funcapp001')]",
        "ifBYOLOnly": "[and(not(equals(parameters('MaxBYOLInstanceCount'), 0)), not(equals(parameters('MaxBYOLInstanceCount'), 0)), equals(parameters('MinPAYGInstanceCount'), 0), equals(parameters('MaxPAYGInstanceCount'), 0))]",
        "ifCreateVNet": "[equals(parameters('VnetDeploymentMethod'), 'create new')]",
        "ifCreateVNetInSameRSG": "[and(variables('ifCreateVNet'), or(equals(parameters('VnetResourceGroupName'), ''), equals(parameters('VnetResourceGroupName'), resourceGroup().name)))]",
        "ifPAYGOnly": "[equals(parameters('BYOLInstanceCount'), 0)]",
        "keyVaultName": "[concat(toLower(variables('uniqueResourceNamePrefix')),'-kv001')]",
        "licenseFileDirectory": "license-files",
        "licensingModel": "[if(variables('ifPAYGOnly'), 'paygonly', if(variables('ifBYOLOnly'), 'byolonly', 'hybrid'))]",
        "location": "[resourceGroup().location]",
        "storageAccountName": "[concat(toLower(variables('uniqueResourceNamePrefix')),'sta001')]",
        "subnet1Name": "[if(and(variables('ifCreateVNet'), empty(parameters('Subnet1Name'))), concat(variables('vNetName'), '-subnet1'), parameters('Subnet1Name'))]",
        "subnet1": {
            "addressRange": "[if(empty(parameters('Subnet1AddressRange')), '', parameters('Subnet1AddressRange'))]",
            "id": "[concat(variables('vNetId'), '/subnets/', variables('subnet1Name'))]",
            "name": "[variables('subnet1Name')]"
        },
        "subnet2Name": "[if(and(variables('ifCreateVNet'), empty(parameters('Subnet2Name'))), concat(variables('vNetName'), '-subnet2'), parameters('Subnet2Name'))]",
        "subnet2": {
            "addressRange": "[if(empty(parameters('Subnet2AddressRange')), '', parameters('Subnet2AddressRange'))]",
            "id": "[concat(variables('vNetId'), '/subnets/', variables('subnet2Name'))]",
            "name": "[variables('subnet2Name')]"
        },
        "subnet3Name": "[if(and(variables('ifCreateVNet'), empty(parameters('Subnet3Name'))), concat(variables('vNetName'), '-subnet3'), parameters('Subnet3Name'))]",
        "subnet3": {
            "addressRange": "[if(empty(parameters('Subnet3AddressRange')), '', parameters('Subnet3AddressRange'))]",
            "id": "[concat(variables('vNetId'), '/subnets/', variables('subnet3Name'))]",
            "name": "[variables('subnet3Name')]"
        },
        "subnet4Name": "[if(and(variables('ifCreateVNet'), empty(parameters('Subnet4Name'))), concat(variables('vNetName'), '-subnet4'), parameters('Subnet4Name'))]",
        "subnet4": {
            "addressRange": "[if(empty(parameters('Subnet4AddressRange')), '', parameters('Subnet4AddressRange'))]",
            "id": "[concat(variables('vNetId'), '/subnets/', variables('subnet4Name'))]",
            "name": "[variables('subnet4Name')]"
        },
        "subnetIds": {
            "copy": [
                {
                    "name": "subnetIdsCopyIt",
                    "count": "[length(variables('subnets'))]",
                    "input": "[variables('subnets')[copyIndex('subnetIdsCopyIt')].id]"
                }
            ]
        },
        "subnets": "[union(createArray(variables('subnet1')), if(empty(variables('subnet2').addressRange), createArray(), createArray(variables('subnet2'))), if(empty(variables('subnet3').addressRange), createArray(), createArray(variables('subnet3'))), if(empty(variables('subnet4').addressRange), createArray(), createArray(variables('subnet4'))))]",
        "trafficPortNumber": 443,
        "uniqueId": "[take(uniquestring(resourceGroup().id), 8)]",
        "uniqueResourceNamePrefix": "[concat(parameters('ResourceNamePrefix'), variables('uniqueId'))]",
        "vNetName": "[if(empty(parameters('VnetName')), concat(variables('uniqueResourceNamePrefix'), '-virtual-network001'), parameters('VnetName'))]",
        "vNetResourceGroupName": "[if(variables('ifCreateVNetInSameRSG'), resourceGroup().name, parameters('VnetResourceGroupName'))]",
        "vmImgReferenceFazBYOL": {
            "publisher": "fortinet",
            "offer": "fortinet-fortianalyzer",
            "sku": "fortinet-fortianalyzer",
            "version": "[parameters('FortiAnalyzerVersion')]"
        },
        "vmImgReferenceFgtBYOL": {
            "publisher": "fortinet",
            "offer": "fortinet_fortigate-vm_v5",
            "sku": "fortinet_fg-vm",
            "version": "[parameters('FOSVersion')]"
        },
        "vmImgReferenceFgtPAYG": {
            "publisher": "fortinet",
            "offer": "fortinet_fortigate-vm_v5",
            "sku": "fortinet_fg-vm_payg_2023",
            "version": "[parameters('FOSVersion')]"
        },
        "vmssNameBYOL": "[concat(variables('uniqueResourceNamePrefix'), '-vmss-byol001')]",
        "vmssNamePAYG": "[concat(variables('uniqueResourceNamePrefix'), '-vmss-payg001')]",
        "vmssNamePrimary": "[if(variables('ifPAYGOnly'), variables('vmssNamePAYG'), variables('vmssNameBYOL'))]",
        "vNetId": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', variables('vNetResourceGroupName'), '/providers/Microsoft.Network/virtualNetworks/', variables('vNetName'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-06-01",
            "name": "[variables('storageAccountName')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "[parameters('StorageAccountType')]",
                "tier": "Standard"
            },
            "kind": "Storage"
        },
        {
            "type": "Microsoft.KeyVault/vaults",
            "apiVersion": "2022-07-01",
            "name": "[variables('keyVaultName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "enabledForDeployment": false,
                "enabledForDiskEncryption": false,
                "enabledForTemplateDeployment": true,
                "tenantId": "[subscription().tenantId]",
                "accessPolicies": [
                    {
                        "objectId": "[parameters('ServicePrincipalObjectID')]",
                        "tenantId": "[subscription().tenantId]",
                        "permissions": {
                            "keys": [ "List", "Get" ],
                            "secrets": [ "List", "Get" ]
                        }
                    }
                ],
                "sku": {
                    "name": "Standard",
                    "family": "A"
                },
                "networkAcls": {
                    "defaultAction": "Allow",
                    "bypass": "AzureServices"
                }
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "apiVersion": "2022-07-01",
            "name": "[concat(variables('keyVaultName'), '/', 'faz-autoscale-admin-username')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [ "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]" ],
            "properties": {
                "value": "[parameters('FortiAnalyzerAutoscaleAdminUsername')]"
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "apiVersion": "2022-07-01",
            "name": "[concat(variables('keyVaultName'), '/', 'faz-autoscale-admin-password')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [ "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]" ],
            "properties": {
                "value": "[parameters('FortiAnalyzerAutoscaleAdminPassword')]"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2019-06-01",
            "name": "[concat(variables('storageAccountName'), '/default/', variables('autoscaleAssetContainerName'))]",
            "dependsOn": [ "[variables('storageAccountName')]" ]
        },
        {
            "type": "Microsoft.DocumentDb/databaseAccounts",
            "apiVersion": "2023-04-15",
            "name": "[variables('databaseAccountName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "name": "[variables('databaseAccountName')]",
                "databaseAccountOfferType": "Standard",
                "locations": [
                    {
                        "locationName": "[variables('location')]"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2022-09-01",
            "name": "CreateDatabase",
            "dependsOn": [ "[variables('databaseAccountName')]" ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "https://raw.githubusercontent.com/fortinet/fortigate-autoscale-azure/3.6.0/templates/link_template.database.json"
                },
                "parameters": {
                    "DatabaseAccountName": {
                        "value": "[variables('databaseAccountName')]"
                    },
                    "DatabaseName": {
                        "value": "[variables('databaseName')]"
                    },
                    "SharedThroughput": {
                        "value": "[variables('databaseSharedThroughput')]"
                    },
                    "EnableFortiAnalyzer": {
                        "value": "[if(variables('enableFortiAnalyzer'), 'yes', 'no')]"
                    },
                    "EnableHybridLicensing": {
                        "value": "[if(variables('enableHybridLicensing'), 'yes', 'no')]"
                    }
                }
            },
            "subscriptionId": "[subscription().subscriptionId]",
            "resourceGroup": "[resourceGroup().name]"
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2022-09-01",
            "name": "CreateVirtualNetwork",
            "condition": "[variables('ifCreateVNet')]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "https://raw.githubusercontent.com/fortinet/fortigate-autoscale-azure/3.6.0/templates/link_template.vnet.json"
                },
                "parameters": {
                    "Subnets": {
                        "value": "[variables('subnets')]"
                    },
                    "UniqueResourceNamePrefix": {
                        "value": "[variables('uniqueResourceNamePrefix')]"
                    },
                    "VnetAddressSpace": {
                        "value": "[parameters('VnetAddressSpace')]"
                    },
                    "VNetName": {
                        "value": "[variables('vNetName')]"
                    }
                }
            },
            "subscriptionId": "[subscription().subscriptionId]",
            "resourceGroup": "[variables('vNetResourceGroupName')]"
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2022-09-01",
            "dependsOn": [ "CreateVirtualNetwork", "CreateLoadBalancers" ],
            "name": "UpdateVirtualNetwork",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "https://raw.githubusercontent.com/fortinet/fortigate-autoscale-azure/3.6.0/templates/link_template.vnet.configuration.json"
                },
                "parameters": {
                    "NetworkSecurityGroupRulesSubnet1Inbound": {
                        "value": "[createArray(createArray(if(variables('ifCreateVNet'), reference('CreateVirtualNetwork').outputs.networkSecurityGroupNameExternal.value, parameters('Subnet1NetworkSecurityGroupName')), concat(reference('CreateLoadBalancers').outputs.externalLBName.value, '-inbound-nat-pool'), 'Allow', '*', createArray(), null(), createArray(variables('adminPortNumberHTTPS'), variables('adminPortNumberSSH')), string(parameters('Subnet1NetworkSecurityGroupRulePriority')), '*', '*', createArray(), '*', createArray()), createArray(if(variables('ifCreateVNet'), reference('CreateVirtualNetwork').outputs.networkSecurityGroupNameExternal.value, parameters('Subnet1NetworkSecurityGroupName')), 'allow-https-inbound', 'Allow', '*', createArray(), null(), createArray(443), string(add(parameters('Subnet1NetworkSecurityGroupRulePriority'), 1)), '*', '*', createArray(), '*', createArray()))]"
                    },
                    "NetworkSecurityGroupRulesSubnet1Outbound": {
                        "value": "[createArray(createArray(if(variables('ifCreateVNet'), reference('CreateVirtualNetwork').outputs.networkSecurityGroupNameExternal.value, parameters('Subnet1NetworkSecurityGroupName')), concat(reference('CreateLoadBalancers').outputs.externalLBName.value, '-outbound-all'), 'Allow', '*', createArray(), '*', createArray(), string(parameters('Subnet1NetworkSecurityGroupRulePriority')), '*', '*', createArray(), '*', createArray()))]"
                    },
                    "NetworkSecurityGroupRulesExtraSubnetsInbound": {
                        "value": "[createArray()]"
                    },
                    "NetworkSecurityGroupRulesExtraSubnetsOutbound": {
                        "value": "[createArray()]"
                    },
                    "Subnet1AddressRange": {
                        "value": "[parameters('Subnet1AddressRange')]"
                    },
                    "Subnet1Name": {
                        "value": "[variables('subnet1Name')]"
                    },
                    "Subnet1NetworkSecurityGroupName": {
                        "value": "[if(variables('ifCreateVNet'), reference('CreateVirtualNetwork').outputs.networkSecurityGroupNameExternal.value, parameters('Subnet1NetworkSecurityGroupName'))]"
                    },
                    "VNetName": {
                        "value": "[variables('vNetName')]"
                    }
                }
            },
            "subscriptionId": "[subscription().subscriptionId]",
            "resourceGroup": "[variables('vNetResourceGroupName')]"
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2022-09-01",
            "dependsOn": [ "CreateVirtualNetwork" ],
            "name": "CreateLoadBalancers",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "https://raw.githubusercontent.com/fortinet/fortigate-autoscale-azure/3.6.0/templates/link_template.load_balancer.json"
                },
                "parameters": {
                    "ExternalLBBackendPoolNames": {
                        "value": [ "fortigate-vmss-port1" ]
                    },
                    "ExternalLBFrontendIPId": {
                        "value": "[parameters('FrontendIPAddressID')]"
                    },
                    "ExternalLBNATBackendPortHTTPS": {
                        "value": "[variables('adminPortNumberHTTPS')]"
                    },
                    "ExternalLBNATBackendPortSSH": {
                        "value": "[variables('adminPortNumberSSH')]"
                    },
                    "ExternalLBRules": {
                        "value": []
                    },
                    "InternalLBFrontendIPAddress": {
                        "value": ""
                    },
                    "InternalLBFrontendSubnetId": {
                        "value": ""
                    },
                    "UniqueResourceNamePrefix": {
                        "value": "[variables('uniqueResourceNamePrefix')]"
                    },
                    "VMSSNameBYOL": {
                        "value": "[variables('vmssNameBYOL')]"
                    },
                    "VMSSNamePAYG": {
                        "value": "[variables('vmssNamePAYG')]"
                    }
                }
            },
            "subscriptionId": "[subscription().subscriptionId]",
            "resourceGroup": "[resourceGroup().name]"
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2022-09-01",
            "name": "FortiAnalyzerIntegrationResources",
            "condition": "[variables('enableFortiAnalyzer')]",
            "dependsOn": [ "CreateVirtualNetwork" ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "https://raw.githubusercontent.com/fortinet/fortigate-autoscale-azure/3.6.0/templates/link_template.faz_integration.json"
                },
                "parameters": {
                    "AdminPassword": {
                        "value": "[parameters('AdminPassword')]"
                    },
                    "AdminUsername": {
                        "value": "[parameters('AdminUsername')]"
                    },
                    "FortiAnalyzerAutoscaleAdminPassword": {
                        "value": "[parameters('FortiAnalyzerAutoscaleAdminPassword')]"
                    },
                    "FortiAnalyzerAutoscaleAdminUsername": {
                        "value": "[parameters('FortiAnalyzerAutoscaleAdminUsername')]"
                    },
                    "FortiAnalyzerCustomPrivateIPAddress": {
                        "value": "[parameters('FortiAnalyzerCustomPrivateIPAddress')]"
                    },
                    "FortiAnalyzerPublicIPAddressID": {
                        "value": "[parameters('FortiAnalyzerPublicIPAddressID')]"
                    },
                    "FortiAnalyzerInstanceType": {
                        "value": "[parameters('FortiAnalyzerInstanceType')]"
                    },
                    "SubnetId": {
                        "value": "[variables('subnet1').id]"
                    },
                    "UniqueResourceNamePrefix": {
                        "value": "[variables('uniqueResourceNamePrefix')]"
                    },
                    "VmImgReferenceFaz": {
                        "value": "[variables('vmImgReferenceFazBYOL')]"
                    }
                }
            },
            "subscriptionId": "[subscription().subscriptionId]",
            "resourceGroup": "[resourceGroup().name]"
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2022-09-01",
            "name": "CreateFunctionApp",
            "dependsOn": [ "[variables('storageAccountName')]" ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "https://raw.githubusercontent.com/fortinet/fortigate-autoscale-azure/3.6.0/templates/link_template.function_app.json"
                },
                "parameters": {
                    "FunctionAppName": {
                        "value": "[variables('functionAppName')]"
                    },
                    "FunctionExtensionVersion": {
                        "value": "~4"
                    },
                    "NodeJSRuntimeVersion": {
                        "value": "~18"
                    },
                    "PackageResURL": {
                        "value": "[parameters('PackageResURL')]"
                    },
                    "ServicePlanTier": {
                        "value": "[parameters('ServicePlanTier')]"
                    },
                    "StorageAccountName": {
                        "value": "[variables('storageAccountName')]"
                    },
                    "UniqueResourceNamePrefix": {
                        "value": "[variables('uniqueResourceNamePrefix')]"
                    }
                }
            },
            "subscriptionId": "[subscription().subscriptionId]",
            "resourceGroup": "[resourceGroup().name]"
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2022-09-01",
            "name": "CreateVirtualMachineScaleSet",
            "dependsOn": [ "CreateVirtualNetwork", "CreateLoadBalancers", "CreateFunctionApp" ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "https://raw.githubusercontent.com/fortinet/fortigate-autoscale-azure/3.6.0/templates/link_template.vmss.json"
                },
                "parameters": {
                    "AdminPassword": {
                        "value": "[parameters('AdminPassword')]"
                    },
                    "AdminUsername": {
                        "value": "[parameters('AdminUsername')]"
                    },
                    "AvailabilityZones": {
                        "value": "[if(empty(parameters('VMSSAvailabilityZones')), createArray(), parameters('VMSSAvailabilityZones'))]"
                    },
                    "BYOLInstanceCount": {
                        "value": "[parameters('BYOLInstanceCount')]"
                    },
                    "ExternalLBBackendAddressPoolIds": {
                        "value": "[reference('CreateLoadBalancers').outputs.externalLBBackendAddressPoolIds.value]"
                    },
                    "ExternalLBInboundNatPoolIdsBYOL": {
                        "value": "[reference('CreateLoadBalancers').outputs.externalLBInboundNatPoolIdsBYOL.value]"
                    },
                    "ExternalLBInboundNatPoolIdsPAYG": {
                        "value": "[reference('CreateLoadBalancers').outputs.externalLBInboundNatPoolIdsPAYG.value]"
                    },
                    "FunctionAppName": {
                        "value": "[variables('functionAppName')]"
                    },
                    "FunctionAppResourceGroupName": {
                        "value": "[resourceGroup().name]"
                    },
                    "FunctionNameFgtAsHandler": {
                        "value": "[reference('CreateFunctionApp').outputs.functionNameFgtAsHandler.value]"
                    },
                    "FunctionNameLicenseHandler": {
                        "value": "[reference('CreateFunctionApp').outputs.functionNameLicenseHandler.value]"
                    },
                    "InstanceType": {
                        "value": "[parameters('InstanceType')]"
                    },
                    "LicensingModel": {
                        "value": "[variables('licensingModel')]"
                    },
                    "MaxBYOLInstanceCount": {
                        "value": "[parameters('MaxBYOLInstanceCount')]"
                    },
                    "MaxPAYGInstanceCount": {
                        "value": "[parameters('MaxPAYGInstanceCount')]"
                    },
                    "MinBYOLInstanceCount": {
                        "value": "[parameters('MinBYOLInstanceCount')]"
                    },
                    "MinPAYGInstanceCount": {
                        "value": "[parameters('MinPAYGInstanceCount')]"
                    },
                    "PAYGInstanceCount": {
                        "value": "[parameters('PAYGInstanceCount')]"
                    },
                    "ResourceNamePrefix": {
                        "value": "[parameters('ResourceNamePrefix')]"
                    },
                    "ScaleInThreshold": {
                        "value": "[parameters('ScaleInThreshold')]"
                    },
                    "ScaleOutThreshold": {
                        "value": "[parameters('ScaleOutThreshold')]"
                    },
                    "SinglePlacementGroup": {
                        "value": "[equals(parameters('VMSSPlacementGroups'), 'single')]"
                    },
                    "StorageAccountName": {
                        "value": "[variables('storageAccountName')]"
                    },
                    "SubnetIds": {
                        "value": "[if(variables('ifCreateVNet'), reference('CreateVirtualNetwork').outputs.subnetIds.value, variables('subnetIds').subnetIdsCopyIt)]"
                    },
                    "UniqueResourceNamePrefix": {
                        "value": "[variables('uniqueResourceNamePrefix')]"
                    },
                    "VmImageReferenceFgtBYOL": {
                        "value": "[variables('vmImgReferenceFgtBYOL')]"
                    },
                    "VmImageReferenceFgtPAYG": {
                        "value": "[variables('vmImgReferenceFgtPAYG')]"
                    },
                    "VmssNameBYOL": {
                        "value": "[variables('vmssNameBYOL')]"
                    },
                    "VmssNamePAYG": {
                        "value": "[variables('vmssNamePAYG')]"
                    },
                    "ZoneBalance": {
                        "value": "[if(empty(parameters('VMSSAvailabilityZones')), false(), true())]"
                    }
                }
            },
            "subscriptionId": "[subscription().subscriptionId]",
            "resourceGroup": "[resourceGroup().name]"
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2022-09-01",
            "name": "UpdateDBAccessRestrictions",
            "dependsOn": [
                "[variables('databaseAccountName')]",
                "CreateVirtualNetwork",
                "CreateFunctionApp",
                "UpdateVirtualNetwork"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "https://raw.githubusercontent.com/fortinet/fortigate-autoscale-azure/3.6.0/templates/link_template.database.access_restriction.json"
                },
                "parameters": {
                    "AllowAccessFromSubnetIds": {
                        "value": "[createArray(if(variables('ifCreateVNet'), reference('CreateVirtualNetwork').outputs.subnet1Id.value, variables('subnet1').id))]"
                    },
                    "CommaSeparatedIPAddressString": {
                        "value": "[reference('CreateFunctionApp').outputs.functionAppPossibleOutboundIpAddresses.value]"
                    },
                    "DatabaseAccountName": {
                        "value": "[variables('databaseAccountName')]"
                    }
                }
            },
            "subscriptionId": "[subscription().subscriptionId]",
            "resourceGroup": "[resourceGroup().name]"
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2022-09-01",
            "name": "SetupFunctionApp",
            "dependsOn": [
                "[variables('databaseAccountName')]",
                "CreateVirtualNetwork",
                "CreateFunctionApp",
                "FortiAnalyzerIntegrationResources",
                "UpdateVirtualNetwork"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "https://raw.githubusercontent.com/fortinet/fortigate-autoscale-azure/3.6.0/templates/link_template.function_app.setup.json"
                },
                "parameters": {
                    "AdminPortNumber": {
                        "value": "[variables('adminPortNumberHTTPS')]"
                    },
                    "AllowAccessFromIPAddresses": {
                        "value": "[if(empty(parameters('AccessRestrictionIPRange')), createArray(), split(parameters('AccessRestrictionIPRange'), ','))]"
                    },
                    "AllowAccessFromSubnetIds": {
                        "value": "[createArray(if(variables('ifCreateVNet'), reference('CreateVirtualNetwork').outputs.subnet1Id.value, variables('subnet1').id))]"
                    },
                    "BYOLInstanceCount": {
                        "value": "[parameters('BYOLInstanceCount')]"
                    },
                    "DatabaseAccountName": {
                        "value": "[variables('databaseAccountName')]"
                    },
                    "DatabaseName": {
                        "value": "[variables('databaseName')]"
                    },
                    "FortiAnalyzerIntegrationOptions": {
                        "value": "[parameters('FortiAnalyzerIntegrationOptions')]"
                    },
                    "FortiAnalyzerPublicIp": {
                        "value": "[if(variables('enableFortiAnalyzer'), reference('FortiAnalyzerIntegrationResources').outputs.fazPublicIp.value, '')]"
                    },
                    "FortiGatePSKSecret": {
                        "value": "[parameters('FortiGatePSKSecret')]"
                    },
                    "FunctionAppInsightName": {
                        "value": "[reference('CreateFunctionApp').outputs.appInsightName.value]"
                    },
                    "FunctionAppName": {
                        "value": "[variables('functionAppName')]"
                    },
                    "FunctionAppResourceGroupName": {
                        "value": "[resourceGroup().name]"
                    },
                    "FunctionNameFazAuthHandler": {
                        "value": "[reference('CreateFunctionApp').outputs.functionNameFazAuthHandler.value]"
                    },
                    "FunctionNameFgtAsHandler": {
                        "value": "[reference('CreateFunctionApp').outputs.functionNameFgtAsHandler.value]"
                    },
                    "HeartBeatDelayAllowance": {
                        "value": "[parameters('HeartBeatDelayAllowance')]"
                    },
                    "HeartBeatInterval": {
                        "value": "[parameters('HeartBeatInterval')]"
                    },
                    "HeartBeatLossCount": {
                        "value": "[parameters('HeartBeatLossCount')]"
                    },
                    "KeyVaultName": {
                        "value": "[variables('keyVaultName')]"
                    },
                    "LicenseFileDirectory": {
                        "value": "[variables('licenseFileDirectory')]"
                    },
                    "MaxBYOLInstanceCount": {
                        "value": "[parameters('MaxBYOLInstanceCount')]"
                    },
                    "MaxPAYGInstanceCount": {
                        "value": "[parameters('MaxPAYGInstanceCount')]"
                    },
                    "MinBYOLInstanceCount": {
                        "value": "[parameters('MinBYOLInstanceCount')]"
                    },
                    "PAYGInstanceCount": {
                        "value": "[parameters('PAYGInstanceCount')]"
                    },
                    "PackageResURL": {
                        "value": "[parameters('PackageResURL')]"
                    },
                    "PrimaryElectionTimeout": {
                        "value": "[parameters('PrimaryElectionTimeout')]"
                    },
                    "ScaleSetNameBYOL": {
                        "value": "[variables('vmssNameBYOL')]"
                    },
                    "ScaleSetNamePAYG": {
                        "value": "[variables('vmssNamePAYG')]"
                    },
                    "ScaleSetNamePrimary": {
                        "value": "[variables('vmssNamePrimary')]"
                    },
                    "ServicePrincipalAppID": {
                        "value": "[parameters('ServicePrincipalAppID')]"
                    },
                    "ServicePrincipalAppSecret": {
                        "value": "[parameters('ServicePrincipalAppSecret')]"
                    },
                    "StorageAccountName": {
                        "value": "[variables('storageAccountName')]"
                    },
                    "SyncRecoveryCount": {
                        "value": "[parameters('SyncRecoveryCount')]"
                    },
                    "TerminateUnhealthyVM": {
                        "value": "[parameters('TerminateUnhealthyVM')]"
                    },
                    "TrafficPortNumber": {
                        "value": "[variables('trafficPortNumber')]"
                    },
                    "UniqueResourceNamePrefix": {
                        "value": "[variables('uniqueResourceNamePrefix')]"
                    },
                    "VnetAddressSpace": {
                        "value": "[parameters('VnetAddressSpace')]"
                    },
                    "VnetName": {
                        "value": "[variables('vNetName')]"
                    },
                    "VmssResourceGroupName": {
                        "value": "[resourceGroup().name]"
                    }
                }
            },
            "subscriptionId": "[subscription().subscriptionId]",
            "resourceGroup": "[resourceGroup().name]"
        }
    ],
    "outputs": {
        "autoscaleAssetContainerName": {
            "type": "String",
            "value": "[variables('autoscaleAssetContainerName')]"
        },
        "autoscaleSettingsNameBYOL": {
            "type": "String",
            "value": "[reference('CreateVirtualMachineScaleSet').outputs.autoscaleSettingsNameBYOL.value]"
        },
        "autoscaleSettingsNamePAYG": {
            "type": "String",
            "value": "[reference('CreateVirtualMachineScaleSet').outputs.autoscaleSettingsNamePAYG.value]"
        },
        "byolScaleSetDefaultSize": {
            "type": "Int",
            "value": "[reference('CreateVirtualMachineScaleSet').outputs.byolScaleSetDefaultSize.value]"
        },
        "byolScaleSetMaxSize": {
            "type": "Int",
            "value": "[reference('CreateVirtualMachineScaleSet').outputs.byolScaleSetMaxSize.value]"
        },
        "byolScaleSetMinSize": {
            "type": "Int",
            "value": "[reference('CreateVirtualMachineScaleSet').outputs.byolScaleSetMinSize.value]"
        },
        "byolScaleSetName": {
            "type": "String",
            "value": "[reference('CreateVirtualMachineScaleSet').outputs.byolScaleSetName.value]"
        },
        "cmdDeleteAll": {
            "type": "String",
            "value": "[concat('az account set -s ', subscription().subscriptionId, ';', reference('CreateFunctionApp').outputs.cmdDeleteAll.value, reference('UpdateVirtualNetwork').outputs.cmdDeleteAll.value, reference('CreateVirtualMachineScaleSet').outputs.cmdDeleteAll.value, reference('CreateLoadBalancers').outputs.cmdDeleteAll.value, reference('CreateDatabase').outputs.cmdDeleteAll.value, if(variables('enableFortiAnalyzer'), reference('FortiAnalyzerIntegrationResources').outputs.cmdDeleteAll.value, ''), if(variables('ifCreateVNet'), reference('CreateVirtualNetwork').outputs.cmdDeleteAll.value, ''), variables('cmdDeleteKeyVault'), variables('cmdDeleteDatabaseAccount'), variables('cmdDeleteStorageAccount'))]"
        },
        "cmdPostDeletionCleanUp": {
            "type": "String",
            "value": "[concat('az account set -s ', subscription().subscriptionId, ';', reference('UpdateVirtualNetwork').outputs.cmdDeleteAll.value)]"
        },
        "deploymentPackageVersion": {
            "type": "string",
            "value": "3.6.0"
        },
        "externalLBInboundNatPortRanges": {
            "type": "Array",
            "value": "[reference('CreateLoadBalancers').outputs.externalLBInboundNatPortRanges.value]"
        },
        "fazPublicIp": {
            "type": "String",
            "value": "[if(variables('enableFortiAnalyzer'), reference('FortiAnalyzerIntegrationResources').outputs.fazPublicIp.value, 'n/a')]"
        },
        "licenseFileDirectory": {
            "type": "String",
            "value": "[variables('licenseFileDirectory')]"
        },
        "licensingModel": {
            "type": "String",
            "value": "[reference('CreateVirtualMachineScaleSet').outputs.licensingModel.value]"
        },
        "paygScaleSetDefaultSize": {
            "type": "Int",
            "value": "[reference('CreateVirtualMachineScaleSet').outputs.paygScaleSetDefaultSize.value]"
        },
        "paygScaleSetMaxSize": {
            "type": "Int",
            "value": "[reference('CreateVirtualMachineScaleSet').outputs.paygScaleSetMaxSize.value]"
        },
        "paygScaleSetMinSize": {
            "type": "Int",
            "value": "[reference('CreateVirtualMachineScaleSet').outputs.paygScaleSetMinSize.value]"
        },
        "paygScaleSetName": {
            "type": "String",
            "value": "[reference('CreateVirtualMachineScaleSet').outputs.paygScaleSetName.value]"
        },
        "resourceGroupName": {
            "type": "String",
            "value": "[resourceGroup().name]"
        },
        "storageAccountName": {
            "type": "String",
            "value": "[variables('storageAccountName')]"
        },
        "uniqueResourceNamePrefix": {
            "type": "String",
            "value": "[variables('uniqueResourceNamePrefix')]"
        },
        "vNetResourceGroupName": {
            "type": "String",
            "value": "[variables('vNetResourceGroupName')]"
        }
    }
}
