{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "3.3.0.0",
    "parameters": {
        "Subnets": {
            "type": "array",
            "defaultValue": []
        },
        "UniqueResourceNamePrefix": {
            "type": "String"
        },
        "VnetAddressSpace": {
            "type": "String"
        },
        "VNetName": {
            "type": "String"
        }
    },
    "variables": {
        "cmdDeassociateNSGFromSubnets": {
            "copy": [
                {
                    "name": "cmdDeassociateNSGCopyIt",
                    "count": "[length(parameters('Subnets'))]",
                    "input": "[concat('az network vnet subnet update -g ', resourceGroup().name, ' -n ', parameters('Subnets')[copyIndex('cmdDeassociateNSGCopyIt')].name, ' --vnet-name ', parameters('VNetName'),' --remove networkSecurityGroup', ';')]"
                }
            ]
        },
        "cmdDeleteAll": "[concat('az account set -s ', subscription().subscriptionId, ';')]",
        "cmdDeleteNSG": "[concat('az network nsg delete -g ', resourceGroup().name, ' -n ', variables('networkSecurityGroupNameExternal') , ';', 'az network nsg delete -g ', resourceGroup().name, ' -n ', variables('networkSecurityGroupNameInternal') , ';')]",
        "cmdDeleteVNet": "[concat('az network vnet delete -g ', resourceGroup().name, ' -n ', parameters('VNetName') , ';')]",
        "networkSecurityGroupIdExternal": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/networkSecurityGroups/', variables('networkSecurityGroupNameExternal'))]",
        "networkSecurityGroupIdInternal": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/networkSecurityGroups/', variables('networkSecurityGroupNameInternal'))]",
        "networkSecurityGroupName": "[concat(parameters('UniqueResourceNamePrefix'), '-nsg')]",
        "networkSecurityGroupNameExternal": "[concat(variables('networkSecurityGroupName'), '-ext-lb')]",
        "networkSecurityGroupNameInternal": "[concat(variables('networkSecurityGroupName'), '-int-lb')]",
        "serviceEndpoints": [
            {
                "service": "Microsoft.AzureCosmosDB",
                "locations": ["*"]
            },
            {
                "service": "Microsoft.Web",
                "locations": ["*"]
            }
        ],
        "subnet1Id": "[parameters('Subnets')[0].id]",
        "subnet1Name": "[parameters('Subnets')[0].name]",
        "subnets": {
            "copy": [
                {
                    "name": "subnetsCopyIt",
                    "count": "[length(parameters('Subnets'))]",
                    "input": {
                        "name": "[parameters('Subnets')[copyIndex('subnetsCopyIt')].name]",
                        "properties": {
                            "addressPrefix": "[parameters('Subnets')[copyIndex('subnetsCopyIt')].addressRange]",
                            "networkSecurityGroup": {
                                "id": "[if(equals(copyIndex('subnetsCopyIt'), 0), variables('networkSecurityGroupIdExternal'), variables('networkSecurityGroupIdInternal'))]"
                            },
                            "serviceEndpoints": "[if(equals(copyIndex('subnetsCopyIt'), 0), variables('serviceEndpoints'), createArray())]"
                        }
                    }
                }
            ]
        },
        "vNetId": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/virtualNetworks/', parameters('VNetName'))]"
    },
    "resources": [
        {
            "apiVersion": "2019-04-01",
            "location": "[resourceGroup().location]",
            "name": "[variables('networkSecurityGroupNameExternal')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "AllowAllInBound",
                        "properties": {
                            "description": "Allow all in",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "AllowAllOutbound",
                        "properties": {
                            "description": "Allow all out",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 105,
                            "direction": "Outbound"
                        }
                    }
                ]
            },
            "type": "Microsoft.Network/networkSecurityGroups"
        },
        {
            "apiVersion": "2019-04-01",
            "dependsOn": ["[variables('networkSecurityGroupNameInternal')]"],
            "location": "[resourceGroup().location]",
            "name": "[parameters('VNetName')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": ["[parameters('VnetAddressSpace')]"]
                },
                "Subnets": "[variables('subnets').subnetsCopyIt]"
            },
            "type": "Microsoft.Network/virtualNetworks"
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2018-05-01",
            "name": "CmdDeassociateNSG",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "https://raw.githubusercontent.com/fortinet/fortigate-autoscale-azure/main/templates/template_function.join_string_array.json"
                },
                "parameters": {
                    "InputString": {
                        "value": ""
                    },
                    "Delimiter": {
                        "value": ""
                    },
                    "StringArray": {
                        "value": "[variables('cmdDeassociateNSGFromSubnets').cmdDeassociateNSGCopyIt]"
                    }
                }
            },
            "subscriptionId": "[subscription().subscriptionId]",
            "resourceGroup": "[resourceGroup().name]"
        }
    ],
    "outputs": {
        "cmdDeleteAll": {
            "type": "String",
            "value": "[concat(variables('cmdDeleteAll'), reference('CmdDeassociateNSG').outputs.outputString.value, variables('cmdDeleteNSG'), variables('cmdDeleteVNet'))]"
        },
        "networkSecurityGroupNameExternal": {
            "type": "String",
            "value": "[variables('networkSecurityGroupNameExternal')]"
        },
        "subnet1Id": {
            "type": "String",
            "value": "[variables('subnet1Id')]"
        },
        "subnet1Name": {
            "type": "String",
            "value": "[variables('subnet1Name')]"
        },
        "subnetCount": {
            "type": "Int",
            "value": "[length(parameters('Subnets'))]"
        },
        "subnetIds": {
            "type": "Array",
            "copy": {
                "count": "[length(parameters('Subnets'))]",
                "input": "[parameters('Subnets')[copyIndex()].id]"
            }
        },
        "subnetNames": {
            "type": "Array",
            "copy": {
                "count": "[length(parameters('Subnets'))]",
                "input": "[parameters('Subnets')[copyIndex()].name]"
            }
        },
        "vNetId": {
            "type": "String",
            "value": "[variables('vNetId')]"
        },
        "vNetName": {
            "type": "String",
            "value": "[parameters('VNetName')]"
        }
    }
}
